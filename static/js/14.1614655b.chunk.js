(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{261:function(t,e,n){"use strict";var i=n(322),r=n(272),a=4;var o=function(t){return Object(r.a)(t,a)},s=n(323);n(321),n(267);function d(t){var e={options:{directed:t.isDirected(),multigraph:t.isMultigraph(),compound:t.isCompound()},nodes:c(t),edges:l(t)};return i.a(t.graph())||(e.value=o(t.graph())),e}function c(t){return s.a(t.nodes(),function(e){var n=t.node(e),r=t.parent(e),a={v:e};return i.a(n)||(a.value=n),i.a(r)||(a.parent=r),a})}function l(t){return s.a(t.edges(),function(e){var n=t.edge(e),r={v:e.v,w:e.w};return i.a(e.name)||(r.name=e.name),i.a(n)||(r.value=n),r})}n.d(e,"a",function(){return d})},262:function(t,e,n){"use strict";n.d(e,"a",function(){return j});var i=n(259),r=n(261),a=n(263),o=n(250),s=n(257),d=n(260),c=n(2);let l={},g={},h={};const f=(t,e)=>(o.y.trace("In isDecendant",e," ",t," = ",g[e].includes(t)),!!g[e].includes(t)),y=(t,e,n,i)=>{o.y.warn("Copying children of ",t,"root",i,"data",e.node(t),i);const r=e.children(t)||[];t!==i&&r.push(t),o.y.warn("Copying (nodes) clusterId",t,"nodes",r),r.forEach(r=>{if(e.children(r).length>0)y(r,e,n,i);else{const a=e.node(r);o.y.info("cp ",r," to ",i," with parent ",t),n.setNode(r,a),i!==e.parent(r)&&(o.y.warn("Setting parent",r,e.parent(r)),n.setParent(r,e.parent(r))),t!==i&&r!==t?(o.y.debug("Setting parent",r,t),n.setParent(r,t)):(o.y.info("In copy ",t,"root",i,"data",e.node(t),i),o.y.debug("Not Setting parent for node=",r,"cluster!==rootId",t!==i,"node!==clusterId",r!==t));const s=e.edges(r);o.y.debug("Copying Edges",s),s.forEach(r=>{o.y.info("Edge",r);const a=e.edge(r.v,r.w,r.name);o.y.info("Edge data",a,i);try{((t,e)=>(o.y.info("Decendants of ",e," is ",g[e]),o.y.info("Edge is ",t),t.v!==e&&t.w!==e&&(g[e]?g[e].includes(t.v)||f(t.v,e)||f(t.w,e)||g[e].includes(t.w):(o.y.debug("Tilt, ",e,",not in decendants"),!1))))(r,i)?(o.y.info("Copying as ",r.v,r.w,a,r.name),n.setEdge(r.v,r.w,a,r.name),o.y.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):o.y.info("Skipping copy of edge ",r.v,"--\x3e",r.w," rootId: ",i," clusterId:",t)}catch(s){o.y.error(s)}})}o.y.debug("Removing node",r),e.removeNode(r)})},u=(t,e)=>{const n=e.children(t);let i=[...n];for(const r of n)h[r]=t,i=[...i,...u(r,e)];return i},p=(t,e)=>{o.y.trace("Searching",t);const n=e.children(t);if(o.y.trace("Searching children of id ",t,n),n.length<1)return o.y.trace("This is a valid node",t),t;for(const i of n){const n=p(i,e);if(n)return o.y.trace("Found replacement for",t," => ",n),n}},w=t=>l[t]&&l[t].externalConnections&&l[t]?l[t].id:t,b=(t,e)=>{if(o.y.warn("extractor - ",e,r.a(t),t.children("D")),e>10)return void o.y.error("Bailing out");let n=t.nodes(),i=!1;for(const r of n){const e=t.children(r);i=i||e.length>0}if(i){o.y.debug("Nodes = ",n,e);for(const i of n)if(o.y.debug("Extracting node",i,l,l[i]&&!l[i].externalConnections,!t.parent(i),t.node(i),t.children("D")," Depth ",e),l[i])if(!l[i].externalConnections&&t.children(i)&&t.children(i).length>0){o.y.warn("Cluster without external connections, without a parent and with children",i,e);let n="TB"===t.graph().rankdir?"LR":"TB";l[i]&&l[i].clusterData&&l[i].clusterData.dir&&(n=l[i].clusterData.dir,o.y.warn("Fixing dir",l[i].clusterData.dir,n));const a=new s.a({multigraph:!0,compound:!0}).setGraph({rankdir:n,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});o.y.warn("Old graph before copy",r.a(t)),y(i,t,a,i),t.setNode(i,{clusterNode:!0,id:i,clusterData:l[i].clusterData,labelText:l[i].labelText,graph:a}),o.y.warn("New graph after copy node: (",i,")",r.a(a)),o.y.debug("Old graph after copy",r.a(t))}else o.y.warn("Cluster ** ",i," **not meeting the criteria !externalConnections:",!l[i].externalConnections," no parent: ",!t.parent(i)," children ",t.children(i)&&t.children(i).length>0,t.children("D"),e),o.y.debug(l);else o.y.debug("Not a cluster",i,e);n=t.nodes(),o.y.warn("New list of nodes",n);for(const i of n){const n=t.node(i);o.y.warn(" Now next level",i,n),n.clusterNode&&b(n.graph,e+1)}}else o.y.debug("Done, no node has children",t.nodes())},v=(t,e)=>{if(0===e.length)return[];let n=Object.assign(e);return e.forEach(e=>{const i=t.children(e),r=v(t,i);n=[...n,...r]}),n},m={rect:(t,e)=>{o.y.info("Creating subgraph rect for ",e.id,e);const n=t.insert("g").attr("class","cluster"+(e.class?" "+e.class:"")).attr("id",e.id),i=n.insert("rect",":first-child"),r=Object(o.z)(Object(o.p)().flowchart.htmlLabels),s=n.insert("g").attr("class","cluster-label"),l="markdown"===e.labelType?Object(d.a)(s,e.labelText,{style:e.labelStyle,useHtmlLabels:r}):s.node().appendChild(Object(a.c)(e.labelText,e.labelStyle,void 0,!0));let g=l.getBBox();if(Object(o.z)(Object(o.p)().flowchart.htmlLabels)){const t=l.children[0],e=Object(c.H)(l);g=t.getBoundingClientRect(),e.attr("width",g.width),e.attr("height",g.height)}const h=0*e.padding,f=h/2,y=e.width<=g.width+h?g.width+h:e.width;e.width<=g.width+h?e.diff=(g.width-e.width)/2-e.padding/2:e.diff=-e.padding/2,o.y.trace("Data ",e,JSON.stringify(e)),i.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("x",e.x-y/2).attr("y",e.y-e.height/2-f).attr("width",y).attr("height",e.height+h),r?s.attr("transform","translate("+(e.x-g.width/2)+", "+(e.y-e.height/2)+")"):s.attr("transform","translate("+e.x+", "+(e.y-e.height/2)+")");const u=i.node().getBBox();return e.width=u.width,e.height=u.height,e.intersect=function(t){return Object(a.i)(e,t)},n},roundedWithTitle:(t,e)=>{const n=t.insert("g").attr("class",e.classes).attr("id",e.id),i=n.insert("rect",":first-child"),r=n.insert("g").attr("class","cluster-label"),s=n.append("rect"),d=r.node().appendChild(Object(a.c)(e.labelText,e.labelStyle,void 0,!0));let l=d.getBBox();if(Object(o.z)(Object(o.p)().flowchart.htmlLabels)){const t=d.children[0],e=Object(c.H)(d);l=t.getBoundingClientRect(),e.attr("width",l.width),e.attr("height",l.height)}l=d.getBBox();const g=0*e.padding,h=g/2,f=e.width<=l.width+e.padding?l.width+e.padding:e.width;e.width<=l.width+e.padding?e.diff=(l.width+0*e.padding-e.width)/2:e.diff=-e.padding/2,i.attr("class","outer").attr("x",e.x-f/2-h).attr("y",e.y-e.height/2-h).attr("width",f+g).attr("height",e.height+g),s.attr("class","inner").attr("x",e.x-f/2-h).attr("y",e.y-e.height/2-h+l.height-1).attr("width",f+g).attr("height",e.height+g-l.height-3),r.attr("transform","translate("+(e.x-l.width/2)+", "+(e.y-e.height/2-e.padding/3+(Object(o.z)(Object(o.p)().flowchart.htmlLabels)?5:3))+")");const y=i.node().getBBox();return e.height=y.height,e.intersect=function(t){return Object(a.i)(e,t)},n},noteGroup:(t,e)=>{const n=t.insert("g").attr("class","note-cluster").attr("id",e.id),i=n.insert("rect",":first-child"),r=0*e.padding,o=r/2;i.attr("rx",e.rx).attr("ry",e.ry).attr("x",e.x-e.width/2-o).attr("y",e.y-e.height/2-o).attr("width",e.width+r).attr("height",e.height+r).attr("fill","none");const s=i.node().getBBox();return e.width=s.width,e.height=s.height,e.intersect=function(t){return Object(a.i)(e,t)},n},divider:(t,e)=>{const n=t.insert("g").attr("class",e.classes).attr("id",e.id),i=n.insert("rect",":first-child"),r=0*e.padding,o=r/2;i.attr("class","divider").attr("x",e.x-e.width/2-o).attr("y",e.y-e.height/2).attr("width",e.width+r).attr("height",e.height+r);const s=i.node().getBBox();return e.width=s.width,e.height=s.height,e.diff=-e.padding/2,e.intersect=function(t){return Object(a.i)(e,t)},n}};let x={};const O=async(t,e,n,s,d)=>{o.y.info("Graph in recursive render: XXX",r.a(e),d);const c=e.graph().rankdir;o.y.trace("Dir in recursive render - dir:",c);const g=t.insert("g").attr("class","root");e.nodes()?o.y.info("Recursive render XXX",e.nodes()):o.y.info("No nodes found for",e),e.edges().length>0&&o.y.trace("Recursive edges",e.edge(e.edges()[0]));const h=g.insert("g").attr("class","clusters"),f=g.insert("g").attr("class","edgePaths"),y=g.insert("g").attr("class","edgeLabels"),u=g.insert("g").attr("class","nodes");await Promise.all(e.nodes().map(async function(t){const i=e.node(t);if(void 0!==d){const n=JSON.parse(JSON.stringify(d.clusterData));o.y.info("Setting data for cluster XXX (",t,") ",n,d),e.setNode(d.id,n),e.parent(t)||(o.y.trace("Setting parent",t,d.id),e.setParent(t,d.id,n))}if(o.y.info("(Insert) Node XXX"+t+": "+JSON.stringify(e.node(t))),i&&i.clusterNode){o.y.info("Cluster identified",t,i.width,e.node(t));const r=await O(u,i.graph,n,s,e.node(t)),d=r.elem;Object(a.n)(i,d),i.diff=r.diff||0,o.y.info("Node bounds (abc123)",t,i,i.width,i.x,i.y),Object(a.m)(d,i),o.y.warn("Recursive render complete ",d,i)}else e.children(t).length>0?(o.y.info("Cluster - the non recursive path XXX",t,i.id,i,e),o.y.info(p(i.id,e)),l[i.id]={id:p(i.id,e),node:i}):(o.y.info("Node - the non recursive path",t,i.id,i),await Object(a.e)(u,e.node(t),c))})),e.edges().forEach(function(t){const n=e.edge(t.v,t.w,t.name);o.y.info("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),o.y.info("Edge "+t.v+" -> "+t.w+": ",t," ",JSON.stringify(e.edge(t))),o.y.info("Fix",l,"ids:",t.v,t.w,"Translateing: ",l[t.v],l[t.w]),Object(a.f)(y,n)}),e.edges().forEach(function(t){o.y.info("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t))}),o.y.info("#############################################"),o.y.info("###                Layout                 ###"),o.y.info("#############################################"),o.y.info(e),Object(i.a)(e),o.y.info("Graph after layout:",r.a(e));let w=0;return(t=>v(t,t.children()))(e).forEach(function(t){const n=e.node(t);o.y.info("Position "+t+": "+JSON.stringify(e.node(t))),o.y.info("Position "+t+": ("+n.x,","+n.y,") width: ",n.width," height: ",n.height),n&&n.clusterNode?Object(a.l)(n):e.children(t).length>0?(((t,e)=>{o.y.trace("Inserting cluster");const n=e.shape||"rect";x[e.id]=m[n](t,e)})(h,n),l[n.id].node=n):Object(a.l)(n)}),e.edges().forEach(function(t){const i=e.edge(t);o.y.info("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(i),i);const r=Object(a.g)(f,t,i,l,n,e,s);Object(a.h)(i,r)}),e.nodes().forEach(function(t){const n=e.node(t);o.y.info(t,n.type,n.diff),"group"===n.type&&(w=n.diff)}),{elem:g,diff:w}},j=async(t,e,n,i,s)=>{Object(a.a)(t,n,i,s),Object(a.b)(),Object(a.d)(),x={},g={},h={},l={},o.y.warn("Graph at first:",JSON.stringify(r.a(e))),((t,e)=>{!t||e>10?o.y.debug("Opting out, no graph "):(o.y.debug("Opting in, graph "),t.nodes().forEach(function(e){t.children(e).length>0&&(o.y.warn("Cluster identified",e," Replacement id in edges: ",p(e,t)),g[e]=u(e,t),l[e]={id:p(e,t),clusterData:t.node(e)})}),t.nodes().forEach(function(e){const n=t.children(e),i=t.edges();n.length>0?(o.y.debug("Cluster identified",e,g),i.forEach(t=>{t.v!==e&&t.w!==e&&f(t.v,e)^f(t.w,e)&&(o.y.warn("Edge: ",t," leaves cluster ",e),o.y.warn("Decendants of XXX ",e,": ",g[e]),l[e].externalConnections=!0)})):o.y.debug("Not a cluster ",e,g)}),t.edges().forEach(function(e){const n=t.edge(e);o.y.warn("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),o.y.warn("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(t.edge(e)));let i=e.v,r=e.w;if(o.y.warn("Fix XXX",l,"ids:",e.v,e.w,"Translating: ",l[e.v]," --- ",l[e.w]),l[e.v]&&l[e.w]&&l[e.v]===l[e.w]){o.y.warn("Fixing and trixing link to self - removing XXX",e.v,e.w,e.name),o.y.warn("Fixing and trixing - removing XXX",e.v,e.w,e.name),i=w(e.v),r=w(e.w),t.removeEdge(e.v,e.w,e.name);const a=e.w+"---"+e.v;t.setNode(a,{domId:a,id:a,labelStyle:"",labelText:n.label,padding:0,shape:"labelRect",style:""});const s=structuredClone(n),d=structuredClone(n);s.label="",s.arrowTypeEnd="none",d.label="",s.fromCluster=e.v,d.toCluster=e.v,t.setEdge(i,a,s,e.name+"-cyclic-special"),t.setEdge(a,r,d,e.name+"-cyclic-special")}else(l[e.v]||l[e.w])&&(o.y.warn("Fixing and trixing - removing XXX",e.v,e.w,e.name),i=w(e.v),r=w(e.w),t.removeEdge(e.v,e.w,e.name),i!==e.v&&(n.fromCluster=e.v),r!==e.w&&(n.toCluster=e.w),o.y.warn("Fix Replacing with XXX",i,r,e.name),t.setEdge(i,r,n,e.name))}),o.y.warn("Adjusted Graph",r.a(t)),b(t,0),o.y.trace(l))})(e),o.y.warn("Graph after:",JSON.stringify(r.a(e))),await O(t,e,i,s)}},338:function(t,e,n){"use strict";n.r(e),n.d(e,"diagram",function(){return S});var i=n(297),r=n(257),a=n(2),o=n(250),s=n(262);n(60),n(61),n(59),n(26),n(259),n(261);const d="".concat("statediagram","-").concat("state"),c="".concat("transition"," ").concat("note-edge"),l="".concat("statediagram","-").concat("note"),g="".concat("statediagram","-").concat("cluster"),h="".concat("statediagram","-").concat("cluster-alt"),f="state",y="----",u="".concat(y).concat("note"),p="".concat(y).concat("parent");let w={},b=0;function v(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"",i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:y;const r=null!==n&&n.length>0?"".concat(i).concat(n):"";return"".concat(f,"-").concat(t).concat(r,"-").concat(e)}const m=(t,e,n,r,a,s)=>{const f=n.id,y=function(t){return void 0===t||null===t?"":t.classes?t.classes.join(" "):""}(r[f]);if("root"!==f){let e="rect";!0===n.start&&(e="start"),!1===n.start&&(e="end"),n.type!==i.a&&(e=n.type),w[f]||(w[f]={id:f,shape:e,description:o.r.sanitizeText(f,Object(o.p)()),classes:"".concat(y," ").concat(d)});const r=w[f];n.description&&(Array.isArray(r.description)?(r.shape="rectWithTitle",r.description.push(n.description)):r.description.length>0?(r.shape="rectWithTitle",r.description===f?r.description=[n.description]:r.description=[r.description,n.description]):(r.shape="rect",r.description=n.description),r.description=o.r.sanitizeTextOrArray(r.description,Object(o.p)())),1===r.description.length&&"rectWithTitle"===r.shape&&(r.shape="rect"),!r.type&&n.doc&&(o.y.info("Setting cluster for ",f,O(n)),r.type="group",r.dir=O(n),r.shape=n.type===i.c?"divider":"roundedWithTitle",r.classes=r.classes+" "+g+" "+(s?h:""));const a={labelStyle:"",shape:r.shape,labelText:r.description,classes:r.classes,style:"",id:f,dir:r.dir,domId:v(f,b),type:r.type,padding:15,centerLabel:!0};if(n.note){const e={labelStyle:"",shape:"note",labelText:n.note.text,classes:l,style:"",id:f+u+"-"+b,domId:v(f,b,"note"),type:r.type,padding:15},i={labelStyle:"",shape:"noteGroup",labelText:n.note.text,classes:r.classes,style:"",id:f+p,domId:v(f,b,"parent"),type:"group",padding:0};b++;const o=f+p;t.setNode(o,i),t.setNode(e.id,e),t.setNode(f,a),t.setParent(f,o),t.setParent(e.id,o);let s=f,d=e.id;"left of"===n.note.position&&(s=e.id,d=f),t.setEdge(s,d,{arrowhead:"none",arrowType:"",style:"fill:none",labelStyle:"",classes:c,arrowheadStyle:"fill: #333",labelpos:"c",labelType:"text",thickness:"normal"})}else t.setNode(f,a)}e&&"root"!==e.id&&(o.y.trace("Setting node ",f," to be child of its parent ",e.id),t.setParent(f,e.id)),n.doc&&(o.y.trace("Adding nodes children "),x(t,n,n.doc,r,a,!s))},x=(t,e,n,r,a,s)=>{o.y.trace("items",n),n.forEach(n=>{switch(n.stmt){case i.d:case i.a:m(t,e,n,r,a,s);break;case i.b:{m(t,e,n.state1,r,a,s),m(t,e,n.state2,r,a,s);const i={id:"edge"+b,arrowhead:"normal",arrowTypeEnd:"arrow_barb",style:"fill:none",labelStyle:"",label:o.r.sanitizeText(n.description,Object(o.p)()),arrowheadStyle:"fill: #333",labelpos:"c",labelType:"text",thickness:"normal",classes:"transition"};t.setEdge(n.state1.id,n.state2.id,i,b),b++}}})},O=function(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.e;if(t.doc)for(let n=0;n<t.doc.length;n++){const i=t.doc[n];"dir"===i.stmt&&(e=i.value)}return e},j={setConf:function(t){const e=Object.keys(t);for(const n of e)t[n]},getClasses:function(t,e){return e.db.extract(e.db.getRootDocV2()),e.db.getClasses()},draw:async function(t,e,n,i){o.y.info("Drawing state diagram (v2)",e),w={},i.db.getDirection();const{securityLevel:d,state:c}=Object(o.p)(),l=c.nodeSpacing||50,g=c.rankSpacing||50;o.y.info(i.db.getRootDocV2()),i.db.extract(i.db.getRootDocV2()),o.y.info(i.db.getRootDocV2());const h=i.db.getStates(),f=new r.a({multigraph:!0,compound:!0}).setGraph({rankdir:O(i.db.getRootDocV2()),nodesep:l,ranksep:g,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});let y;m(f,void 0,i.db.getRootDocV2(),h,i.db,!0),"sandbox"===d&&(y=Object(a.H)("#i"+e));const u="sandbox"===d?Object(a.H)(y.nodes()[0].contentDocument.body):Object(a.H)("body"),p=u.select('[id="'.concat(e,'"]')),b=u.select("#"+e+" g");await Object(s.a)(b,f,["barb"],"statediagram",e);o.H.insertTitle(p,"statediagramTitleText",c.titleTopMargin,i.db.getDiagramTitle());const v=p.node().getBBox(),x=v.width+16,j=v.height+16;p.attr("class","statediagram");const S=p.node().getBBox();Object(o.v)(p,j,x,c.useMaxWidth);const E="".concat(S.x-8," ").concat(S.y-8," ").concat(x," ").concat(j);o.y.debug("viewBox ".concat(E)),p.attr("viewBox",E);const N=document.querySelectorAll('[id="'+e+'"] .edgeLabel .label');for(const r of N){const t=r.getBBox(),e=document.createElementNS("http://www.w3.org/2000/svg","rect");e.setAttribute("rx",0),e.setAttribute("ry",0),e.setAttribute("width",t.width),e.setAttribute("height",t.height),r.insertBefore(e,r.firstChild)}}},S={parser:i.g,db:i.f,renderer:j,styles:i.h,init:t=>{t.state||(t.state={}),t.state.arrowMarkerAbsolute=t.arrowMarkerAbsolute,i.f.clear()}}}}]);
//# sourceMappingURL=14.1614655b.chunk.js.map