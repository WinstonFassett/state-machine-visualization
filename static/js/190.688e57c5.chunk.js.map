{"version":3,"file":"static/js/190.688e57c5.chunk.js","mappings":"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","sources":["../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/ascending.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/bisect.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/bisector.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/array.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/ticks.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/max.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/min.js","../node_modules/.pnpm/d3-array@1.2.4/node_modules/d3-array/src/sum.js","../node_modules/.pnpm/d3-sankey@0.12.3/node_modules/d3-sankey/src/align.js","../node_modules/.pnpm/d3-sankey@0.12.3/node_modules/d3-sankey/src/constant.js","../node_modules/.pnpm/d3-sankey@0.12.3/node_modules/d3-sankey/src/sankey.js","../node_modules/.pnpm/d3-path@1.0.9/node_modules/d3-path/src/path.js","../node_modules/.pnpm/d3-shape@1.3.7/node_modules/d3-shape/src/array.js","../node_modules/.pnpm/d3-shape@1.3.7/node_modules/d3-shape/src/constant.js","../node_modules/.pnpm/d3-shape@1.3.7/node_modules/d3-shape/src/point.js","../node_modules/.pnpm/d3-shape@1.3.7/node_modules/d3-shape/src/link/index.js","../node_modules/.pnpm/d3-sankey@0.12.3/node_modules/d3-sankey/src/sankeyLinkHorizontal.js","../node_modules/.pnpm/mermaid@10.6.0/node_modules/mermaid/dist/sankeyDiagram-8f13d901.js"],"sourcesContent":["export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","import { c as getConfig, g as getAccTitle, s as setAccTitle, a as getAccDescription, b as setAccDescription, r as getDiagramTitle, q as setDiagramTitle, t as clear$1, e as common, I as defaultConfig, i as configureSvgSize } from \"./mermaid-8af3addd.js\";\nimport { select, scaleOrdinal, schemeTableau10 } from \"d3\";\nimport { sankey, sankeyLinkHorizontal, sankeyLeft, sankeyRight, sankeyCenter, sankeyJustify } from \"d3-sankey\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 9], $V1 = [1, 10], $V2 = [1, 5, 10, 12];\n  var parser2 = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"SANKEY\": 4, \"NEWLINE\": 5, \"csv\": 6, \"opt_eof\": 7, \"record\": 8, \"csv_tail\": 9, \"EOF\": 10, \"field[source]\": 11, \"COMMA\": 12, \"field[target]\": 13, \"field[value]\": 14, \"field\": 15, \"escaped\": 16, \"non_escaped\": 17, \"DQUOTE\": 18, \"ESCAPED_TEXT\": 19, \"NON_ESCAPED_TEXT\": 20, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SANKEY\", 5: \"NEWLINE\", 10: \"EOF\", 11: \"field[source]\", 12: \"COMMA\", 13: \"field[target]\", 14: \"field[value]\", 18: \"DQUOTE\", 19: \"ESCAPED_TEXT\", 20: \"NON_ESCAPED_TEXT\" },\n    productions_: [0, [3, 4], [6, 2], [9, 2], [9, 0], [7, 1], [7, 0], [8, 5], [15, 1], [15, 1], [16, 3], [17, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 7:\n          const source = yy.findOrCreateNode($$[$0 - 4].trim().replaceAll('\"\"', '\"'));\n          const target = yy.findOrCreateNode($$[$0 - 2].trim().replaceAll('\"\"', '\"'));\n          const value = parseFloat($$[$0].trim());\n          yy.addLink(source, target, value);\n          break;\n        case 8:\n        case 9:\n        case 11:\n          this.$ = $$[$0];\n          break;\n        case 10:\n          this.$ = $$[$0 - 1];\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: [1, 2] }, { 1: [3] }, { 5: [1, 3] }, { 6: 4, 8: 5, 15: 6, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 1: [2, 6], 7: 11, 10: [1, 12] }, o($V1, [2, 4], { 9: 13, 5: [1, 14] }), { 12: [1, 15] }, o($V2, [2, 8]), o($V2, [2, 9]), { 19: [1, 16] }, o($V2, [2, 11]), { 1: [2, 1] }, { 1: [2, 5] }, o($V1, [2, 2]), { 6: 17, 8: 5, 15: 6, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 15: 18, 16: 7, 17: 8, 18: $V0, 20: $V1 }, { 18: [1, 19] }, o($V1, [2, 3]), { 12: [1, 20] }, o($V2, [2, 10]), { 15: 21, 16: 7, 17: 8, 18: $V0, 20: $V1 }, o([1, 5, 10], [2, 7])],\n    defaultActions: { 11: [2, 1], 12: [2, 5] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol, state, action, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function(n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"easy_keword_rules\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            this.pushState(\"csv\");\n            return 4;\n          case 1:\n            return 10;\n          case 2:\n            return 5;\n          case 3:\n            return 12;\n          case 4:\n            this.pushState(\"escaped_text\");\n            return 18;\n          case 5:\n            return 20;\n          case 6:\n            this.popState(\"escaped_text\");\n            return 18;\n          case 7:\n            return 19;\n        }\n      },\n      rules: [/^(?:sankey-beta\\b)/, /^(?:$)/, /^(?:((\\u000D\\u000A)|(\\u000A)))/, /^(?:(\\u002C))/, /^(?:(\\u0022))/, /^(?:([\\u0020-\\u0021\\u0023-\\u002B\\u002D-\\u007E])*)/, /^(?:(\\u0022)(?!(\\u0022)))/, /^(?:(([\\u0020-\\u0021\\u0023-\\u002B\\u002D-\\u007E])|(\\u002C)|(\\u000D)|(\\u000A)|(\\u0022)(\\u0022))*)/],\n      conditions: { \"csv\": { \"rules\": [1, 2, 3, 4, 5, 6, 7], \"inclusive\": false }, \"escaped_text\": { \"rules\": [6, 7], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nlet links = [];\nlet nodes = [];\nlet nodesMap = {};\nconst clear = () => {\n  links = [];\n  nodes = [];\n  nodesMap = {};\n  clear$1();\n};\nclass SankeyLink {\n  constructor(source, target, value = 0) {\n    this.source = source;\n    this.target = target;\n    this.value = value;\n  }\n}\nconst addLink = (source, target, value) => {\n  links.push(new SankeyLink(source, target, value));\n};\nclass SankeyNode {\n  constructor(ID) {\n    this.ID = ID;\n  }\n}\nconst findOrCreateNode = (ID) => {\n  ID = common.sanitizeText(ID, getConfig());\n  if (!nodesMap[ID]) {\n    nodesMap[ID] = new SankeyNode(ID);\n    nodes.push(nodesMap[ID]);\n  }\n  return nodesMap[ID];\n};\nconst getNodes = () => nodes;\nconst getLinks = () => links;\nconst getGraph = () => ({\n  nodes: nodes.map((node) => ({ id: node.ID })),\n  links: links.map((link) => ({\n    source: link.source.ID,\n    target: link.target.ID,\n    value: link.value\n  }))\n});\nconst db = {\n  nodesMap,\n  getConfig: () => getConfig().sankey,\n  getNodes,\n  getLinks,\n  getGraph,\n  addLink,\n  findOrCreateNode,\n  getAccTitle,\n  setAccTitle,\n  getAccDescription,\n  setAccDescription,\n  getDiagramTitle,\n  setDiagramTitle,\n  clear\n};\nconst _Uid = class _Uid2 {\n  static next(name) {\n    return new _Uid2(name + ++_Uid2.count);\n  }\n  constructor(id) {\n    this.id = id;\n    this.href = `#${id}`;\n  }\n  toString() {\n    return \"url(\" + this.href + \")\";\n  }\n};\n_Uid.count = 0;\nlet Uid = _Uid;\nconst alignmentsMap = {\n  left: sankeyLeft,\n  right: sankeyRight,\n  center: sankeyCenter,\n  justify: sankeyJustify\n};\nconst draw = function(text, id, _version, diagObj) {\n  const { securityLevel, sankey: conf } = getConfig();\n  const defaultSankeyConfig = defaultConfig.sankey;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = securityLevel === \"sandbox\" ? root.select(`[id=\"${id}\"]`) : select(`[id=\"${id}\"]`);\n  const width = (conf == null ? void 0 : conf.width) ?? defaultSankeyConfig.width;\n  const height = (conf == null ? void 0 : conf.height) ?? defaultSankeyConfig.width;\n  const useMaxWidth = (conf == null ? void 0 : conf.useMaxWidth) ?? defaultSankeyConfig.useMaxWidth;\n  const nodeAlignment = (conf == null ? void 0 : conf.nodeAlignment) ?? defaultSankeyConfig.nodeAlignment;\n  const prefix = (conf == null ? void 0 : conf.prefix) ?? defaultSankeyConfig.prefix;\n  const suffix = (conf == null ? void 0 : conf.suffix) ?? defaultSankeyConfig.suffix;\n  const showValues = (conf == null ? void 0 : conf.showValues) ?? defaultSankeyConfig.showValues;\n  configureSvgSize(svg, height, width, useMaxWidth);\n  const graph = diagObj.db.getGraph();\n  const nodeAlign = alignmentsMap[nodeAlignment];\n  const nodeWidth = 10;\n  const sankey$1 = sankey().nodeId((d) => d.id).nodeWidth(nodeWidth).nodePadding(10 + (showValues ? 15 : 0)).nodeAlign(nodeAlign).extent([\n    [0, 0],\n    [width, height]\n  ]);\n  sankey$1(graph);\n  const colorScheme = scaleOrdinal(schemeTableau10);\n  svg.append(\"g\").attr(\"class\", \"nodes\").selectAll(\".node\").data(graph.nodes).join(\"g\").attr(\"class\", \"node\").attr(\"id\", (d) => (d.uid = Uid.next(\"node-\")).id).attr(\"transform\", function(d) {\n    return \"translate(\" + d.x0 + \",\" + d.y0 + \")\";\n  }).attr(\"x\", (d) => d.x0).attr(\"y\", (d) => d.y0).append(\"rect\").attr(\"height\", (d) => {\n    return d.y1 - d.y0;\n  }).attr(\"width\", (d) => d.x1 - d.x0).attr(\"fill\", (d) => colorScheme(d.id));\n  const getText = ({ id: id2, value }) => {\n    if (!showValues) {\n      return id2;\n    }\n    return `${id2}\n${prefix}${Math.round(value * 100) / 100}${suffix}`;\n  };\n  svg.append(\"g\").attr(\"class\", \"node-labels\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 14).selectAll(\"text\").data(graph.nodes).join(\"text\").attr(\"x\", (d) => d.x0 < width / 2 ? d.x1 + 6 : d.x0 - 6).attr(\"y\", (d) => (d.y1 + d.y0) / 2).attr(\"dy\", `${showValues ? \"0\" : \"0.35\"}em`).attr(\"text-anchor\", (d) => d.x0 < width / 2 ? \"start\" : \"end\").text(getText);\n  const link = svg.append(\"g\").attr(\"class\", \"links\").attr(\"fill\", \"none\").attr(\"stroke-opacity\", 0.5).selectAll(\".link\").data(graph.links).join(\"g\").attr(\"class\", \"link\").style(\"mix-blend-mode\", \"multiply\");\n  const linkColor = (conf == null ? void 0 : conf.linkColor) || \"gradient\";\n  if (linkColor === \"gradient\") {\n    const gradient = link.append(\"linearGradient\").attr(\"id\", (d) => (d.uid = Uid.next(\"linearGradient-\")).id).attr(\"gradientUnits\", \"userSpaceOnUse\").attr(\"x1\", (d) => d.source.x1).attr(\"x2\", (d) => d.target.x0);\n    gradient.append(\"stop\").attr(\"offset\", \"0%\").attr(\"stop-color\", (d) => colorScheme(d.source.id));\n    gradient.append(\"stop\").attr(\"offset\", \"100%\").attr(\"stop-color\", (d) => colorScheme(d.target.id));\n  }\n  let coloring;\n  switch (linkColor) {\n    case \"gradient\":\n      coloring = (d) => d.uid;\n      break;\n    case \"source\":\n      coloring = (d) => colorScheme(d.source.id);\n      break;\n    case \"target\":\n      coloring = (d) => colorScheme(d.target.id);\n      break;\n    default:\n      coloring = linkColor;\n  }\n  link.append(\"path\").attr(\"d\", sankeyLinkHorizontal()).attr(\"stroke\", coloring).attr(\"stroke-width\", (d) => Math.max(1, d.width));\n};\nconst renderer = {\n  draw\n};\nconst prepareTextForParsing = (text) => {\n  const textToParse = text.replaceAll(/^[^\\S\\n\\r]+|[^\\S\\n\\r]+$/g, \"\").replaceAll(/([\\n\\r])+/g, \"\\n\").trim();\n  return textToParse;\n};\nconst originalParse = parser$1.parse.bind(parser$1);\nparser$1.parse = (text) => originalParse(prepareTextForParsing(text));\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer\n};\nexport {\n  diagram\n};\n"],"names":["a","b","NaN","ascendingBisect","compare","f","length","d","x","ascending","left","lo","hi","mid","right","bisector","array","Array","prototype","slice","map","Math","sqrt","values","valueof","value","max","n","i","min","sum","targetDepth","target","depth","justify","node","sourceLinks","constant","ascendingSourceBreadth","ascendingBreadth","source","index","ascendingTargetBreadth","y0","defaultId","defaultNodes","graph","nodes","defaultLinks","links","find","nodeById","id","get","Error","computeLinkBreadths","_ref","y1","link","width","targetLinks","Sankey","py","sort","linkSort","x0","x1","dx","dy","align","iterations","sankey","apply","arguments","_ref2","entries","Map","push","computeNodeLinks","_ref3","undefined","fixedValue","computeNodeValues","_ref4","current","Set","next","size","add","computeNodeDepths","_ref5","height","computeNodeHeights","columns","_ref6","kx","floor","call","layer","column","computeNodeLayers","c","ky","y","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","w","v","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","_ref7","update","nodeId","_","nodeAlign","nodeSort","nodeWidth","nodePadding","extent","pi","PI","tau","epsilon","tauEpsilon","Path","this","_x0","_y0","_x1","_y1","path","constructor","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","x2","y2","arcTo","r","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","cos","sin","cw","da","rect","h","toString","p","linkSource","linkTarget","curve","pointX","pointY","context","buffer","argv","s","t","curveHorizontal","horizontalSource","horizontalTarget","parser","o","k","o2","$V0","$V1","$V2","parser2","trace","yy","symbols_","terminals_","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","findOrCreateNode","trim","replaceAll","parseFloat","addLink","$","table","defaultActions","parseError","str","hash","recoverable","error","parse","input","self","stack","tstack","vstack","lstack","args","lexer2","Object","create","lexer","sharedState","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","lex","token","pop","getPrototypeOf","symbol","state","action","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","first_line","last_line","first_column","last_column","range","concat","EOF","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","pre","test_match","indexed_rule","backup","matches","tempMatch","rules","_currentRules","flex","begin","condition","popState","conditions","topState","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","Parser","parser$1","nodesMap","SankeyLink","SankeyNode","ID","db","getConfig","getNodes","getLinks","getGraph","common","sanitizeText","getAccTitle","setAccTitle","getAccDescription","setAccDescription","getDiagramTitle","setDiagramTitle","clear","clear$1","_Uid","_Uid2","name","count","href","Uid","alignmentsMap","center","sankeyJustify","renderer","draw","_version","diagObj","securityLevel","conf","defaultSankeyConfig","defaultConfig","sandboxElement","select","root","contentDocument","body","svg","useMaxWidth","nodeAlignment","prefix","suffix","showValues","configureSvgSize","sankey$1","colorScheme","scaleOrdinal","schemeTableau10","append","attr","selectAll","data","uid","_ref8","id2","round","style","linkColor","gradient","coloring","sankeyLinkHorizontal","originalParse","bind","prepareTextForParsing","diagram"],"sourceRoot":""}