{"version":3,"sources":["../node_modules/.pnpm/mermaid@10.6.0/node_modules/mermaid/dist/quadrantDiagram-4d7f4fd6.js"],"names":["__webpack_require__","r","__webpack_exports__","d","diagram","_mermaid_8af3addd_js__WEBPACK_IMPORTED_MODULE_0__","d3__WEBPACK_IMPORTED_MODULE_1__","parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","$Vu","$Vv","$Vw","$Vx","$Vy","$Vz","$VA","parser2","trace","yy","symbols_","error","start","eol","SPACE","QUADRANT","document","line","statement","axisDetails","quadrantDetails","points","title","title_value","acc_title","acc_title_value","acc_descr","acc_descr_value","acc_descr_multiline_value","section","text","point_start","point_x","point_y","X-AXIS","AXIS-TEXT-DELIMITER","Y-AXIS","QUADRANT_1","QUADRANT_2","QUADRANT_3","QUADRANT_4","NEWLINE","SEMI","EOF","alphaNumToken","textNoTagsToken","STR","MD_STR","alphaNum","PUNCTUATION","AMP","NUM","ALPHA","COMMA","PLUS","EQUALS","MULT","DOT","BRKT","UNDERSCORE","MINUS","$accept","$end","terminals_","2","5","6","13","14","15","16","17","18","19","20","22","23","24","25","26","27","28","29","30","31","32","33","34","37","38","40","41","42","43","44","45","46","47","48","49","50","51","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","trim","setDiagramTitle","setAccTitle","setAccDescription","addSection","substr","addPoint","setXAxisLeftText","setXAxisRightText","setYAxisBottomText","setYAxisTopText","setQuadrant1Text","setQuadrant2Text","setQuadrant3Text","setQuadrant4Text","type","table","3","4","1","7","8","9","10","11","12","21","35","36","defaultActions","parseError","str","hash","recoverable","Error","parse","input","self","stack","tstack","vstack","lstack","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","push","ranges","options","lex","token","pop","Array","getPrototypeOf","symbol","state","action","p","len","newState","expected","yyval","errStr","showPosition","join","match","loc","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","unput","lines","split","oldLines","more","reject","backtrack_lexer","less","n","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","case-insensitive","yy_","$avoiding_name_collisions","YY_START","inclusive","acc_descr_multiline","md_string","string","INITIAL","Parser","parser$1","defaultThemeVariables","config","textSanitizer","quadrantBuilder","[object Object]","getDefaultConfig","themeConfig","getDefaultThemeConfig","data","getDefaultData","titleText","quadrant1Text","quadrant2Text","quadrant3Text","quadrant4Text","xAxisLeftText","xAxisRightText","yAxisBottomText","yAxisTopText","_a","_b","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","showXAxis","showYAxis","showTitle","chartHeight","quadrantChart","chartWidth","titlePadding","titleFontSize","quadrantPadding","xAxisLabelPadding","yAxisLabelPadding","xAxisLabelFontSize","yAxisLabelFontSize","quadrantLabelFontSize","quadrantTextTopPadding","pointTextPadding","pointLabelFontSize","pointRadius","xAxisPosition","yAxisPosition","quadrantInternalBorderStrokeWidth","quadrantExternalBorderStrokeWidth","quadrant1Fill","quadrant2Fill","quadrant3Fill","quadrant4Fill","quadrant1TextFill","quadrant2TextFill","quadrant3TextFill","quadrant4TextFill","quadrantPointFill","quadrantPointTextFill","quadrantXAxisTextFill","quadrantYAxisTextFill","quadrantTitleFill","quadrantInternalBorderStrokeFill","quadrantExternalBorderStrokeFill","info","config2","xAxisSpaceCalculation","xAxisSpace","top","bottom","yAxisSpaceCalculation","yAxisSpace","left","right","titleSpaceCalculation","titleSpace","quadrantLeft","quadrantTop","quadrantWidth","quadrantHeight","quadrantSpace","quadrantHalfWidth","quadrantHalfHeight","spaceData","drawXAxisLabelsInMiddle","Boolean","drawYAxisLabelsInMiddle","axisLabels","fill","x","y","fontSize","verticalPos","horizontalPos","rotation","quadrants","width","height","quadrant","xAxis","domain","yAxis","map","point","radius","halfExternalBorderWidth","strokeFill","strokeWidth","x1","y1","x2","y2","calculatedSpace","calculateSpace","getQuadrantPoints","getQuadrants","getAxisLabels","borderLines","getBorders","getTitle","db","setWidth","setConfig","setHeight","textObj","setData","addPoints","getQuadrantData","themeVariables","quadrantChartConfig","setThemeConfig","build","clear","getAccTitle","getDiagramTitle","getAccDescription","renderer","draw","txt","id","_version","diagObj","getDominantBaseLine","getTextAnchor","getTransformation","conf","debug","securityLevel","sandboxElement","svg","nodes","contentDocument","body","select","group","append","attr","useMaxWidth","quadrantData","quadrantsGroup","borderGroup","dataPointGroup","labelGroup","titleGroup","selectAll","enter","style","dataPoints","styles"],"mappings":"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","file":"static/js/24.0ce25b5d.chunk.js","sourcesContent":["import { D as getThemeVariables, A as defaultConfig, l as log, s as setAccTitle, g as getAccTitle, q as setDiagramTitle, r as getDiagramTitle, a as getAccDescription, b as setAccDescription, c as getConfig, t as clear$1, d as sanitizeText, i as configureSvgSize } from \"./mermaid-8af3addd.js\";\nimport { scaleLinear, select } from \"d3\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nvar parser = function () {\n  var o = function (k, v, o2, l) {\n      for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n      return o2;\n    },\n    $V0 = [1, 3],\n    $V1 = [1, 4],\n    $V2 = [1, 5],\n    $V3 = [1, 6],\n    $V4 = [1, 7],\n    $V5 = [1, 5, 13, 15, 17, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],\n    $V6 = [1, 5, 6, 13, 15, 17, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50],\n    $V7 = [32, 33, 34],\n    $V8 = [2, 7],\n    $V9 = [1, 13],\n    $Va = [1, 17],\n    $Vb = [1, 18],\n    $Vc = [1, 19],\n    $Vd = [1, 20],\n    $Ve = [1, 21],\n    $Vf = [1, 22],\n    $Vg = [1, 23],\n    $Vh = [1, 24],\n    $Vi = [1, 25],\n    $Vj = [1, 26],\n    $Vk = [1, 27],\n    $Vl = [1, 30],\n    $Vm = [1, 31],\n    $Vn = [1, 32],\n    $Vo = [1, 33],\n    $Vp = [1, 34],\n    $Vq = [1, 35],\n    $Vr = [1, 36],\n    $Vs = [1, 37],\n    $Vt = [1, 38],\n    $Vu = [1, 39],\n    $Vv = [1, 40],\n    $Vw = [1, 41],\n    $Vx = [1, 42],\n    $Vy = [1, 57],\n    $Vz = [1, 58],\n    $VA = [5, 22, 26, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51];\n  var parser2 = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"eol\": 4,\n      \"SPACE\": 5,\n      \"QUADRANT\": 6,\n      \"document\": 7,\n      \"line\": 8,\n      \"statement\": 9,\n      \"axisDetails\": 10,\n      \"quadrantDetails\": 11,\n      \"points\": 12,\n      \"title\": 13,\n      \"title_value\": 14,\n      \"acc_title\": 15,\n      \"acc_title_value\": 16,\n      \"acc_descr\": 17,\n      \"acc_descr_value\": 18,\n      \"acc_descr_multiline_value\": 19,\n      \"section\": 20,\n      \"text\": 21,\n      \"point_start\": 22,\n      \"point_x\": 23,\n      \"point_y\": 24,\n      \"X-AXIS\": 25,\n      \"AXIS-TEXT-DELIMITER\": 26,\n      \"Y-AXIS\": 27,\n      \"QUADRANT_1\": 28,\n      \"QUADRANT_2\": 29,\n      \"QUADRANT_3\": 30,\n      \"QUADRANT_4\": 31,\n      \"NEWLINE\": 32,\n      \"SEMI\": 33,\n      \"EOF\": 34,\n      \"alphaNumToken\": 35,\n      \"textNoTagsToken\": 36,\n      \"STR\": 37,\n      \"MD_STR\": 38,\n      \"alphaNum\": 39,\n      \"PUNCTUATION\": 40,\n      \"AMP\": 41,\n      \"NUM\": 42,\n      \"ALPHA\": 43,\n      \"COMMA\": 44,\n      \"PLUS\": 45,\n      \"EQUALS\": 46,\n      \"MULT\": 47,\n      \"DOT\": 48,\n      \"BRKT\": 49,\n      \"UNDERSCORE\": 50,\n      \"MINUS\": 51,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      5: \"SPACE\",\n      6: \"QUADRANT\",\n      13: \"title\",\n      14: \"title_value\",\n      15: \"acc_title\",\n      16: \"acc_title_value\",\n      17: \"acc_descr\",\n      18: \"acc_descr_value\",\n      19: \"acc_descr_multiline_value\",\n      20: \"section\",\n      22: \"point_start\",\n      23: \"point_x\",\n      24: \"point_y\",\n      25: \"X-AXIS\",\n      26: \"AXIS-TEXT-DELIMITER\",\n      27: \"Y-AXIS\",\n      28: \"QUADRANT_1\",\n      29: \"QUADRANT_2\",\n      30: \"QUADRANT_3\",\n      31: \"QUADRANT_4\",\n      32: \"NEWLINE\",\n      33: \"SEMI\",\n      34: \"EOF\",\n      37: \"STR\",\n      38: \"MD_STR\",\n      40: \"PUNCTUATION\",\n      41: \"AMP\",\n      42: \"NUM\",\n      43: \"ALPHA\",\n      44: \"COMMA\",\n      45: \"PLUS\",\n      46: \"EQUALS\",\n      47: \"MULT\",\n      48: \"DOT\",\n      49: \"BRKT\",\n      50: \"UNDERSCORE\",\n      51: \"MINUS\"\n    },\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [9, 0], [9, 2], [9, 1], [9, 1], [9, 1], [9, 2], [9, 2], [9, 2], [9, 1], [9, 1], [12, 4], [10, 4], [10, 3], [10, 2], [10, 4], [10, 3], [10, 2], [11, 2], [11, 2], [11, 2], [11, 2], [4, 1], [4, 1], [4, 1], [21, 1], [21, 2], [21, 1], [21, 1], [39, 1], [39, 2], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [35, 1], [36, 1], [36, 1], [36, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 12:\n          this.$ = $$[$0].trim();\n          yy.setDiagramTitle(this.$);\n          break;\n        case 13:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 14:\n        case 15:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 16:\n          yy.addSection($$[$0].substr(8));\n          this.$ = $$[$0].substr(8);\n          break;\n        case 17:\n          yy.addPoint($$[$0 - 3], $$[$0 - 1], $$[$0]);\n          break;\n        case 18:\n          yy.setXAxisLeftText($$[$0 - 2]);\n          yy.setXAxisRightText($$[$0]);\n          break;\n        case 19:\n          $$[$0 - 1].text += \" ⟶ \";\n          yy.setXAxisLeftText($$[$0 - 1]);\n          break;\n        case 20:\n          yy.setXAxisLeftText($$[$0]);\n          break;\n        case 21:\n          yy.setYAxisBottomText($$[$0 - 2]);\n          yy.setYAxisTopText($$[$0]);\n          break;\n        case 22:\n          $$[$0 - 1].text += \" ⟶ \";\n          yy.setYAxisBottomText($$[$0 - 1]);\n          break;\n        case 23:\n          yy.setYAxisBottomText($$[$0]);\n          break;\n        case 24:\n          yy.setQuadrant1Text($$[$0]);\n          break;\n        case 25:\n          yy.setQuadrant2Text($$[$0]);\n          break;\n        case 26:\n          yy.setQuadrant3Text($$[$0]);\n          break;\n        case 27:\n          yy.setQuadrant4Text($$[$0]);\n          break;\n        case 31:\n          this.$ = {\n            text: $$[$0],\n            type: \"text\"\n          };\n          break;\n        case 32:\n          this.$ = {\n            text: $$[$0 - 1].text + \"\" + $$[$0],\n            type: $$[$0 - 1].type\n          };\n          break;\n        case 33:\n          this.$ = {\n            text: $$[$0],\n            type: \"text\"\n          };\n          break;\n        case 34:\n          this.$ = {\n            text: $$[$0],\n            type: \"markdown\"\n          };\n          break;\n        case 35:\n          this.$ = $$[$0];\n          break;\n        case 36:\n          this.$ = $$[$0 - 1] + \"\" + $$[$0];\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      5: $V0,\n      6: $V1,\n      32: $V2,\n      33: $V3,\n      34: $V4\n    }, {\n      1: [3]\n    }, {\n      3: 8,\n      4: 2,\n      5: $V0,\n      6: $V1,\n      32: $V2,\n      33: $V3,\n      34: $V4\n    }, {\n      3: 9,\n      4: 2,\n      5: $V0,\n      6: $V1,\n      32: $V2,\n      33: $V3,\n      34: $V4\n    }, o($V5, [2, 4], {\n      7: 10\n    }), o($V6, [2, 28]), o($V6, [2, 29]), o($V6, [2, 30]), {\n      1: [2, 1]\n    }, {\n      1: [2, 2]\n    }, o($V7, $V8, {\n      8: 11,\n      9: 12,\n      10: 14,\n      11: 15,\n      12: 16,\n      21: 28,\n      35: 29,\n      1: [2, 3],\n      5: $V9,\n      13: $Va,\n      15: $Vb,\n      17: $Vc,\n      19: $Vd,\n      20: $Ve,\n      25: $Vf,\n      27: $Vg,\n      28: $Vh,\n      29: $Vi,\n      30: $Vj,\n      31: $Vk,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }), o($V5, [2, 5]), {\n      4: 43,\n      32: $V2,\n      33: $V3,\n      34: $V4\n    }, o($V7, $V8, {\n      10: 14,\n      11: 15,\n      12: 16,\n      21: 28,\n      35: 29,\n      9: 44,\n      5: $V9,\n      13: $Va,\n      15: $Vb,\n      17: $Vc,\n      19: $Vd,\n      20: $Ve,\n      25: $Vf,\n      27: $Vg,\n      28: $Vh,\n      29: $Vi,\n      30: $Vj,\n      31: $Vk,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }), o($V7, [2, 9]), o($V7, [2, 10]), o($V7, [2, 11]), {\n      14: [1, 45]\n    }, {\n      16: [1, 46]\n    }, {\n      18: [1, 47]\n    }, o($V7, [2, 15]), o($V7, [2, 16]), {\n      21: 48,\n      35: 29,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }, {\n      21: 49,\n      35: 29,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }, {\n      21: 50,\n      35: 29,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }, {\n      21: 51,\n      35: 29,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }, {\n      21: 52,\n      35: 29,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }, {\n      21: 53,\n      35: 29,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }, {\n      5: $Vy,\n      22: [1, 54],\n      35: 56,\n      36: 55,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }, o($VA, [2, 31]), o($VA, [2, 33]), o($VA, [2, 34]), o($VA, [2, 37]), o($VA, [2, 38]), o($VA, [2, 39]), o($VA, [2, 40]), o($VA, [2, 41]), o($VA, [2, 42]), o($VA, [2, 43]), o($VA, [2, 44]), o($VA, [2, 45]), o($VA, [2, 46]), o($VA, [2, 47]), o($V5, [2, 6]), o($V7, [2, 8]), o($V7, [2, 12]), o($V7, [2, 13]), o($V7, [2, 14]), o($V7, [2, 20], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      26: [1, 59],\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 23], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      26: [1, 60],\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 24], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 25], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 26], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 27], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), {\n      23: [1, 61]\n    }, o($VA, [2, 32]), o($VA, [2, 48]), o($VA, [2, 49]), o($VA, [2, 50]), o($V7, [2, 19], {\n      35: 29,\n      21: 62,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }), o($V7, [2, 22], {\n      35: 29,\n      21: 63,\n      37: $Vl,\n      38: $Vm,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx\n    }), {\n      24: [1, 64]\n    }, o($V7, [2, 18], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 21], {\n      36: 55,\n      35: 56,\n      5: $Vy,\n      40: $Vn,\n      41: $Vo,\n      42: $Vp,\n      43: $Vq,\n      44: $Vr,\n      45: $Vs,\n      46: $Vt,\n      47: $Vu,\n      48: $Vv,\n      49: $Vw,\n      50: $Vx,\n      51: $Vz\n    }), o($V7, [2, 17])],\n    defaultActions: {\n      8: [2, 1],\n      9: [2, 2]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n        stack = [0],\n        tstack = [],\n        vstack = [null],\n        lstack = [],\n        table = this.table,\n        yytext = \"\",\n        yylineno = 0,\n        yyleng = 0,\n        TERROR = 2,\n        EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      var symbol,\n        state,\n        action,\n        r,\n        yyval = {},\n        p,\n        len,\n        newState,\n        expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function () {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function () {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      // retain first n characters of the match\n      less: function (n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function () {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function (match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      // return next match in input\n      next: function () {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {\n        \"case-insensitive\": true\n      },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            return 32;\n          case 3:\n            break;\n          case 4:\n            this.begin(\"title\");\n            return 13;\n          case 5:\n            this.popState();\n            return \"title_value\";\n          case 6:\n            this.begin(\"acc_title\");\n            return 15;\n          case 7:\n            this.popState();\n            return \"acc_title_value\";\n          case 8:\n            this.begin(\"acc_descr\");\n            return 17;\n          case 9:\n            this.popState();\n            return \"acc_descr_value\";\n          case 10:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 11:\n            this.popState();\n            break;\n          case 12:\n            return \"acc_descr_multiline_value\";\n          case 13:\n            return 25;\n          case 14:\n            return 27;\n          case 15:\n            return 26;\n          case 16:\n            return 28;\n          case 17:\n            return 29;\n          case 18:\n            return 30;\n          case 19:\n            return 31;\n          case 20:\n            this.begin(\"md_string\");\n            break;\n          case 21:\n            return \"MD_STR\";\n          case 22:\n            this.popState();\n            break;\n          case 23:\n            this.begin(\"string\");\n            break;\n          case 24:\n            this.popState();\n            break;\n          case 25:\n            return \"STR\";\n          case 26:\n            this.begin(\"point_start\");\n            return 22;\n          case 27:\n            this.begin(\"point_x\");\n            return 23;\n          case 28:\n            this.popState();\n            break;\n          case 29:\n            this.popState();\n            this.begin(\"point_y\");\n            break;\n          case 30:\n            this.popState();\n            return 24;\n          case 31:\n            return 6;\n          case 32:\n            return 43;\n          case 33:\n            return \"COLON\";\n          case 34:\n            return 45;\n          case 35:\n            return 44;\n          case 36:\n            return 46;\n          case 37:\n            return 46;\n          case 38:\n            return 47;\n          case 39:\n            return 49;\n          case 40:\n            return 50;\n          case 41:\n            return 48;\n          case 42:\n            return 41;\n          case 43:\n            return 51;\n          case 44:\n            return 42;\n          case 45:\n            return 5;\n          case 46:\n            return 33;\n          case 47:\n            return 40;\n          case 48:\n            return 34;\n        }\n      },\n      rules: [/^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n\\r]+)/i, /^(?:%%[^\\n]*)/i, /^(?:title\\b)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?: *x-axis *)/i, /^(?: *y-axis *)/i, /^(?: *--+> *)/i, /^(?: *quadrant-1 *)/i, /^(?: *quadrant-2 *)/i, /^(?: *quadrant-3 *)/i, /^(?: *quadrant-4 *)/i, /^(?:[\"][`])/i, /^(?:[^`\"]+)/i, /^(?:[`][\"])/i, /^(?:[\"])/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:\\s*:\\s*\\[\\s*)/i, /^(?:(1)|(0(.\\d+)?))/i, /^(?:\\s*\\] *)/i, /^(?:\\s*,\\s*)/i, /^(?:(1)|(0(.\\d+)?))/i, /^(?: *quadrantChart *)/i, /^(?:[A-Za-z]+)/i, /^(?::)/i, /^(?:\\+)/i, /^(?:,)/i, /^(?:=)/i, /^(?:=)/i, /^(?:\\*)/i, /^(?:#)/i, /^(?:[\\_])/i, /^(?:\\.)/i, /^(?:&)/i, /^(?:-)/i, /^(?:[0-9]+)/i, /^(?:\\s)/i, /^(?:;)/i, /^(?:[!\"#$%&'*+,-.`?\\\\_/])/i, /^(?:$)/i],\n      conditions: {\n        \"point_y\": {\n          \"rules\": [30],\n          \"inclusive\": false\n        },\n        \"point_x\": {\n          \"rules\": [29],\n          \"inclusive\": false\n        },\n        \"point_start\": {\n          \"rules\": [27, 28],\n          \"inclusive\": false\n        },\n        \"acc_descr_multiline\": {\n          \"rules\": [11, 12],\n          \"inclusive\": false\n        },\n        \"acc_descr\": {\n          \"rules\": [9],\n          \"inclusive\": false\n        },\n        \"acc_title\": {\n          \"rules\": [7],\n          \"inclusive\": false\n        },\n        \"title\": {\n          \"rules\": [5],\n          \"inclusive\": false\n        },\n        \"md_string\": {\n          \"rules\": [21, 22],\n          \"inclusive\": false\n        },\n        \"string\": {\n          \"rules\": [24, 25],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 3, 4, 6, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nconst parser$1 = parser;\nconst defaultThemeVariables = getThemeVariables();\nclass QuadrantBuilder {\n  constructor() {\n    this.config = this.getDefaultConfig();\n    this.themeConfig = this.getDefaultThemeConfig();\n    this.data = this.getDefaultData();\n  }\n  getDefaultData() {\n    return {\n      titleText: \"\",\n      quadrant1Text: \"\",\n      quadrant2Text: \"\",\n      quadrant3Text: \"\",\n      quadrant4Text: \"\",\n      xAxisLeftText: \"\",\n      xAxisRightText: \"\",\n      yAxisBottomText: \"\",\n      yAxisTopText: \"\",\n      points: []\n    };\n  }\n  getDefaultConfig() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r;\n    return {\n      showXAxis: true,\n      showYAxis: true,\n      showTitle: true,\n      chartHeight: ((_a = defaultConfig.quadrantChart) == null ? void 0 : _a.chartWidth) || 500,\n      chartWidth: ((_b = defaultConfig.quadrantChart) == null ? void 0 : _b.chartHeight) || 500,\n      titlePadding: ((_c = defaultConfig.quadrantChart) == null ? void 0 : _c.titlePadding) || 10,\n      titleFontSize: ((_d = defaultConfig.quadrantChart) == null ? void 0 : _d.titleFontSize) || 20,\n      quadrantPadding: ((_e = defaultConfig.quadrantChart) == null ? void 0 : _e.quadrantPadding) || 5,\n      xAxisLabelPadding: ((_f = defaultConfig.quadrantChart) == null ? void 0 : _f.xAxisLabelPadding) || 5,\n      yAxisLabelPadding: ((_g = defaultConfig.quadrantChart) == null ? void 0 : _g.yAxisLabelPadding) || 5,\n      xAxisLabelFontSize: ((_h = defaultConfig.quadrantChart) == null ? void 0 : _h.xAxisLabelFontSize) || 16,\n      yAxisLabelFontSize: ((_i = defaultConfig.quadrantChart) == null ? void 0 : _i.yAxisLabelFontSize) || 16,\n      quadrantLabelFontSize: ((_j = defaultConfig.quadrantChart) == null ? void 0 : _j.quadrantLabelFontSize) || 16,\n      quadrantTextTopPadding: ((_k = defaultConfig.quadrantChart) == null ? void 0 : _k.quadrantTextTopPadding) || 5,\n      pointTextPadding: ((_l = defaultConfig.quadrantChart) == null ? void 0 : _l.pointTextPadding) || 5,\n      pointLabelFontSize: ((_m = defaultConfig.quadrantChart) == null ? void 0 : _m.pointLabelFontSize) || 12,\n      pointRadius: ((_n = defaultConfig.quadrantChart) == null ? void 0 : _n.pointRadius) || 5,\n      xAxisPosition: ((_o = defaultConfig.quadrantChart) == null ? void 0 : _o.xAxisPosition) || \"top\",\n      yAxisPosition: ((_p = defaultConfig.quadrantChart) == null ? void 0 : _p.yAxisPosition) || \"left\",\n      quadrantInternalBorderStrokeWidth: ((_q = defaultConfig.quadrantChart) == null ? void 0 : _q.quadrantInternalBorderStrokeWidth) || 1,\n      quadrantExternalBorderStrokeWidth: ((_r = defaultConfig.quadrantChart) == null ? void 0 : _r.quadrantExternalBorderStrokeWidth) || 2\n    };\n  }\n  getDefaultThemeConfig() {\n    return {\n      quadrant1Fill: defaultThemeVariables.quadrant1Fill,\n      quadrant2Fill: defaultThemeVariables.quadrant2Fill,\n      quadrant3Fill: defaultThemeVariables.quadrant3Fill,\n      quadrant4Fill: defaultThemeVariables.quadrant4Fill,\n      quadrant1TextFill: defaultThemeVariables.quadrant1TextFill,\n      quadrant2TextFill: defaultThemeVariables.quadrant2TextFill,\n      quadrant3TextFill: defaultThemeVariables.quadrant3TextFill,\n      quadrant4TextFill: defaultThemeVariables.quadrant4TextFill,\n      quadrantPointFill: defaultThemeVariables.quadrantPointFill,\n      quadrantPointTextFill: defaultThemeVariables.quadrantPointTextFill,\n      quadrantXAxisTextFill: defaultThemeVariables.quadrantXAxisTextFill,\n      quadrantYAxisTextFill: defaultThemeVariables.quadrantYAxisTextFill,\n      quadrantTitleFill: defaultThemeVariables.quadrantTitleFill,\n      quadrantInternalBorderStrokeFill: defaultThemeVariables.quadrantInternalBorderStrokeFill,\n      quadrantExternalBorderStrokeFill: defaultThemeVariables.quadrantExternalBorderStrokeFill\n    };\n  }\n  clear() {\n    this.config = this.getDefaultConfig();\n    this.themeConfig = this.getDefaultThemeConfig();\n    this.data = this.getDefaultData();\n    log.info(\"clear called\");\n  }\n  setData(data) {\n    this.data = {\n      ...this.data,\n      ...data\n    };\n  }\n  addPoints(points) {\n    this.data.points = [...points, ...this.data.points];\n  }\n  setConfig(config2) {\n    log.trace(\"setConfig called with: \", config2);\n    this.config = {\n      ...this.config,\n      ...config2\n    };\n  }\n  setThemeConfig(themeConfig) {\n    log.trace(\"setThemeConfig called with: \", themeConfig);\n    this.themeConfig = {\n      ...this.themeConfig,\n      ...themeConfig\n    };\n  }\n  calculateSpace(xAxisPosition, showXAxis, showYAxis, showTitle) {\n    const xAxisSpaceCalculation = this.config.xAxisLabelPadding * 2 + this.config.xAxisLabelFontSize;\n    const xAxisSpace = {\n      top: xAxisPosition === \"top\" && showXAxis ? xAxisSpaceCalculation : 0,\n      bottom: xAxisPosition === \"bottom\" && showXAxis ? xAxisSpaceCalculation : 0\n    };\n    const yAxisSpaceCalculation = this.config.yAxisLabelPadding * 2 + this.config.yAxisLabelFontSize;\n    const yAxisSpace = {\n      left: this.config.yAxisPosition === \"left\" && showYAxis ? yAxisSpaceCalculation : 0,\n      right: this.config.yAxisPosition === \"right\" && showYAxis ? yAxisSpaceCalculation : 0\n    };\n    const titleSpaceCalculation = this.config.titleFontSize + this.config.titlePadding * 2;\n    const titleSpace = {\n      top: showTitle ? titleSpaceCalculation : 0\n    };\n    const quadrantLeft = this.config.quadrantPadding + yAxisSpace.left;\n    const quadrantTop = this.config.quadrantPadding + xAxisSpace.top + titleSpace.top;\n    const quadrantWidth = this.config.chartWidth - this.config.quadrantPadding * 2 - yAxisSpace.left - yAxisSpace.right;\n    const quadrantHeight = this.config.chartHeight - this.config.quadrantPadding * 2 - xAxisSpace.top - xAxisSpace.bottom - titleSpace.top;\n    const quadrantHalfWidth = quadrantWidth / 2;\n    const quadrantHalfHeight = quadrantHeight / 2;\n    const quadrantSpace = {\n      quadrantLeft,\n      quadrantTop,\n      quadrantWidth,\n      quadrantHalfWidth,\n      quadrantHeight,\n      quadrantHalfHeight\n    };\n    return {\n      xAxisSpace,\n      yAxisSpace,\n      titleSpace,\n      quadrantSpace\n    };\n  }\n  getAxisLabels(xAxisPosition, showXAxis, showYAxis, spaceData) {\n    const {\n      quadrantSpace,\n      titleSpace\n    } = spaceData;\n    const {\n      quadrantHalfHeight,\n      quadrantHeight,\n      quadrantLeft,\n      quadrantHalfWidth,\n      quadrantTop,\n      quadrantWidth\n    } = quadrantSpace;\n    const drawXAxisLabelsInMiddle = Boolean(this.data.xAxisRightText);\n    const drawYAxisLabelsInMiddle = Boolean(this.data.yAxisTopText);\n    const axisLabels = [];\n    if (this.data.xAxisLeftText && showXAxis) {\n      axisLabels.push({\n        text: this.data.xAxisLeftText,\n        fill: this.themeConfig.quadrantXAxisTextFill,\n        x: quadrantLeft + (drawXAxisLabelsInMiddle ? quadrantHalfWidth / 2 : 0),\n        y: xAxisPosition === \"top\" ? this.config.xAxisLabelPadding + titleSpace.top : this.config.xAxisLabelPadding + quadrantTop + quadrantHeight + this.config.quadrantPadding,\n        fontSize: this.config.xAxisLabelFontSize,\n        verticalPos: drawXAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: 0\n      });\n    }\n    if (this.data.xAxisRightText && showXAxis) {\n      axisLabels.push({\n        text: this.data.xAxisRightText,\n        fill: this.themeConfig.quadrantXAxisTextFill,\n        x: quadrantLeft + quadrantHalfWidth + (drawXAxisLabelsInMiddle ? quadrantHalfWidth / 2 : 0),\n        y: xAxisPosition === \"top\" ? this.config.xAxisLabelPadding + titleSpace.top : this.config.xAxisLabelPadding + quadrantTop + quadrantHeight + this.config.quadrantPadding,\n        fontSize: this.config.xAxisLabelFontSize,\n        verticalPos: drawXAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: 0\n      });\n    }\n    if (this.data.yAxisBottomText && showYAxis) {\n      axisLabels.push({\n        text: this.data.yAxisBottomText,\n        fill: this.themeConfig.quadrantYAxisTextFill,\n        x: this.config.yAxisPosition === \"left\" ? this.config.yAxisLabelPadding : this.config.yAxisLabelPadding + quadrantLeft + quadrantWidth + this.config.quadrantPadding,\n        y: quadrantTop + quadrantHeight - (drawYAxisLabelsInMiddle ? quadrantHalfHeight / 2 : 0),\n        fontSize: this.config.yAxisLabelFontSize,\n        verticalPos: drawYAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: -90\n      });\n    }\n    if (this.data.yAxisTopText && showYAxis) {\n      axisLabels.push({\n        text: this.data.yAxisTopText,\n        fill: this.themeConfig.quadrantYAxisTextFill,\n        x: this.config.yAxisPosition === \"left\" ? this.config.yAxisLabelPadding : this.config.yAxisLabelPadding + quadrantLeft + quadrantWidth + this.config.quadrantPadding,\n        y: quadrantTop + quadrantHalfHeight - (drawYAxisLabelsInMiddle ? quadrantHalfHeight / 2 : 0),\n        fontSize: this.config.yAxisLabelFontSize,\n        verticalPos: drawYAxisLabelsInMiddle ? \"center\" : \"left\",\n        horizontalPos: \"top\",\n        rotation: -90\n      });\n    }\n    return axisLabels;\n  }\n  getQuadrants(spaceData) {\n    const {\n      quadrantSpace\n    } = spaceData;\n    const {\n      quadrantHalfHeight,\n      quadrantLeft,\n      quadrantHalfWidth,\n      quadrantTop\n    } = quadrantSpace;\n    const quadrants = [{\n      text: {\n        text: this.data.quadrant1Text,\n        fill: this.themeConfig.quadrant1TextFill,\n        x: 0,\n        y: 0,\n        fontSize: this.config.quadrantLabelFontSize,\n        verticalPos: \"center\",\n        horizontalPos: \"middle\",\n        rotation: 0\n      },\n      x: quadrantLeft + quadrantHalfWidth,\n      y: quadrantTop,\n      width: quadrantHalfWidth,\n      height: quadrantHalfHeight,\n      fill: this.themeConfig.quadrant1Fill\n    }, {\n      text: {\n        text: this.data.quadrant2Text,\n        fill: this.themeConfig.quadrant2TextFill,\n        x: 0,\n        y: 0,\n        fontSize: this.config.quadrantLabelFontSize,\n        verticalPos: \"center\",\n        horizontalPos: \"middle\",\n        rotation: 0\n      },\n      x: quadrantLeft,\n      y: quadrantTop,\n      width: quadrantHalfWidth,\n      height: quadrantHalfHeight,\n      fill: this.themeConfig.quadrant2Fill\n    }, {\n      text: {\n        text: this.data.quadrant3Text,\n        fill: this.themeConfig.quadrant3TextFill,\n        x: 0,\n        y: 0,\n        fontSize: this.config.quadrantLabelFontSize,\n        verticalPos: \"center\",\n        horizontalPos: \"middle\",\n        rotation: 0\n      },\n      x: quadrantLeft,\n      y: quadrantTop + quadrantHalfHeight,\n      width: quadrantHalfWidth,\n      height: quadrantHalfHeight,\n      fill: this.themeConfig.quadrant3Fill\n    }, {\n      text: {\n        text: this.data.quadrant4Text,\n        fill: this.themeConfig.quadrant4TextFill,\n        x: 0,\n        y: 0,\n        fontSize: this.config.quadrantLabelFontSize,\n        verticalPos: \"center\",\n        horizontalPos: \"middle\",\n        rotation: 0\n      },\n      x: quadrantLeft + quadrantHalfWidth,\n      y: quadrantTop + quadrantHalfHeight,\n      width: quadrantHalfWidth,\n      height: quadrantHalfHeight,\n      fill: this.themeConfig.quadrant4Fill\n    }];\n    for (const quadrant of quadrants) {\n      quadrant.text.x = quadrant.x + quadrant.width / 2;\n      if (this.data.points.length === 0) {\n        quadrant.text.y = quadrant.y + quadrant.height / 2;\n        quadrant.text.horizontalPos = \"middle\";\n      } else {\n        quadrant.text.y = quadrant.y + this.config.quadrantTextTopPadding;\n        quadrant.text.horizontalPos = \"top\";\n      }\n    }\n    return quadrants;\n  }\n  getQuadrantPoints(spaceData) {\n    const {\n      quadrantSpace\n    } = spaceData;\n    const {\n      quadrantHeight,\n      quadrantLeft,\n      quadrantTop,\n      quadrantWidth\n    } = quadrantSpace;\n    const xAxis = scaleLinear().domain([0, 1]).range([quadrantLeft, quadrantWidth + quadrantLeft]);\n    const yAxis = scaleLinear().domain([0, 1]).range([quadrantHeight + quadrantTop, quadrantTop]);\n    const points = this.data.points.map(point => {\n      const props = {\n        x: xAxis(point.x),\n        y: yAxis(point.y),\n        fill: this.themeConfig.quadrantPointFill,\n        radius: this.config.pointRadius,\n        text: {\n          text: point.text,\n          fill: this.themeConfig.quadrantPointTextFill,\n          x: xAxis(point.x),\n          y: yAxis(point.y) + this.config.pointTextPadding,\n          verticalPos: \"center\",\n          horizontalPos: \"top\",\n          fontSize: this.config.pointLabelFontSize,\n          rotation: 0\n        }\n      };\n      return props;\n    });\n    return points;\n  }\n  getBorders(spaceData) {\n    const halfExternalBorderWidth = this.config.quadrantExternalBorderStrokeWidth / 2;\n    const {\n      quadrantSpace\n    } = spaceData;\n    const {\n      quadrantHalfHeight,\n      quadrantHeight,\n      quadrantLeft,\n      quadrantHalfWidth,\n      quadrantTop,\n      quadrantWidth\n    } = quadrantSpace;\n    const borderLines = [\n    // top border\n    {\n      strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n      strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n      x1: quadrantLeft - halfExternalBorderWidth,\n      y1: quadrantTop,\n      x2: quadrantLeft + quadrantWidth + halfExternalBorderWidth,\n      y2: quadrantTop\n    },\n    // right border\n    {\n      strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n      strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n      x1: quadrantLeft + quadrantWidth,\n      y1: quadrantTop + halfExternalBorderWidth,\n      x2: quadrantLeft + quadrantWidth,\n      y2: quadrantTop + quadrantHeight - halfExternalBorderWidth\n    },\n    // bottom border\n    {\n      strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n      strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n      x1: quadrantLeft - halfExternalBorderWidth,\n      y1: quadrantTop + quadrantHeight,\n      x2: quadrantLeft + quadrantWidth + halfExternalBorderWidth,\n      y2: quadrantTop + quadrantHeight\n    },\n    // left border\n    {\n      strokeFill: this.themeConfig.quadrantExternalBorderStrokeFill,\n      strokeWidth: this.config.quadrantExternalBorderStrokeWidth,\n      x1: quadrantLeft,\n      y1: quadrantTop + halfExternalBorderWidth,\n      x2: quadrantLeft,\n      y2: quadrantTop + quadrantHeight - halfExternalBorderWidth\n    },\n    // vertical inner border\n    {\n      strokeFill: this.themeConfig.quadrantInternalBorderStrokeFill,\n      strokeWidth: this.config.quadrantInternalBorderStrokeWidth,\n      x1: quadrantLeft + quadrantHalfWidth,\n      y1: quadrantTop + halfExternalBorderWidth,\n      x2: quadrantLeft + quadrantHalfWidth,\n      y2: quadrantTop + quadrantHeight - halfExternalBorderWidth\n    },\n    // horizontal inner border\n    {\n      strokeFill: this.themeConfig.quadrantInternalBorderStrokeFill,\n      strokeWidth: this.config.quadrantInternalBorderStrokeWidth,\n      x1: quadrantLeft + halfExternalBorderWidth,\n      y1: quadrantTop + quadrantHalfHeight,\n      x2: quadrantLeft + quadrantWidth - halfExternalBorderWidth,\n      y2: quadrantTop + quadrantHalfHeight\n    }];\n    return borderLines;\n  }\n  getTitle(showTitle) {\n    if (showTitle) {\n      return {\n        text: this.data.titleText,\n        fill: this.themeConfig.quadrantTitleFill,\n        fontSize: this.config.titleFontSize,\n        horizontalPos: \"top\",\n        verticalPos: \"center\",\n        rotation: 0,\n        y: this.config.titlePadding,\n        x: this.config.chartWidth / 2\n      };\n    }\n    return;\n  }\n  build() {\n    const showXAxis = this.config.showXAxis && !!(this.data.xAxisLeftText || this.data.xAxisRightText);\n    const showYAxis = this.config.showYAxis && !!(this.data.yAxisTopText || this.data.yAxisBottomText);\n    const showTitle = this.config.showTitle && !!this.data.titleText;\n    const xAxisPosition = this.data.points.length > 0 ? \"bottom\" : this.config.xAxisPosition;\n    const calculatedSpace = this.calculateSpace(xAxisPosition, showXAxis, showYAxis, showTitle);\n    return {\n      points: this.getQuadrantPoints(calculatedSpace),\n      quadrants: this.getQuadrants(calculatedSpace),\n      axisLabels: this.getAxisLabels(xAxisPosition, showXAxis, showYAxis, calculatedSpace),\n      borderLines: this.getBorders(calculatedSpace),\n      title: this.getTitle(showTitle)\n    };\n  }\n}\nconst config = getConfig();\nfunction textSanitizer(text) {\n  return sanitizeText(text.trim(), config);\n}\nconst quadrantBuilder = new QuadrantBuilder();\nfunction setQuadrant1Text(textObj) {\n  quadrantBuilder.setData({\n    quadrant1Text: textSanitizer(textObj.text)\n  });\n}\nfunction setQuadrant2Text(textObj) {\n  quadrantBuilder.setData({\n    quadrant2Text: textSanitizer(textObj.text)\n  });\n}\nfunction setQuadrant3Text(textObj) {\n  quadrantBuilder.setData({\n    quadrant3Text: textSanitizer(textObj.text)\n  });\n}\nfunction setQuadrant4Text(textObj) {\n  quadrantBuilder.setData({\n    quadrant4Text: textSanitizer(textObj.text)\n  });\n}\nfunction setXAxisLeftText(textObj) {\n  quadrantBuilder.setData({\n    xAxisLeftText: textSanitizer(textObj.text)\n  });\n}\nfunction setXAxisRightText(textObj) {\n  quadrantBuilder.setData({\n    xAxisRightText: textSanitizer(textObj.text)\n  });\n}\nfunction setYAxisTopText(textObj) {\n  quadrantBuilder.setData({\n    yAxisTopText: textSanitizer(textObj.text)\n  });\n}\nfunction setYAxisBottomText(textObj) {\n  quadrantBuilder.setData({\n    yAxisBottomText: textSanitizer(textObj.text)\n  });\n}\nfunction addPoint(textObj, x, y) {\n  quadrantBuilder.addPoints([{\n    x,\n    y,\n    text: textSanitizer(textObj.text)\n  }]);\n}\nfunction setWidth(width) {\n  quadrantBuilder.setConfig({\n    chartWidth: width\n  });\n}\nfunction setHeight(height) {\n  quadrantBuilder.setConfig({\n    chartHeight: height\n  });\n}\nfunction getQuadrantData() {\n  const config2 = getConfig();\n  const {\n    themeVariables,\n    quadrantChart: quadrantChartConfig\n  } = config2;\n  if (quadrantChartConfig) {\n    quadrantBuilder.setConfig(quadrantChartConfig);\n  }\n  quadrantBuilder.setThemeConfig({\n    quadrant1Fill: themeVariables.quadrant1Fill,\n    quadrant2Fill: themeVariables.quadrant2Fill,\n    quadrant3Fill: themeVariables.quadrant3Fill,\n    quadrant4Fill: themeVariables.quadrant4Fill,\n    quadrant1TextFill: themeVariables.quadrant1TextFill,\n    quadrant2TextFill: themeVariables.quadrant2TextFill,\n    quadrant3TextFill: themeVariables.quadrant3TextFill,\n    quadrant4TextFill: themeVariables.quadrant4TextFill,\n    quadrantPointFill: themeVariables.quadrantPointFill,\n    quadrantPointTextFill: themeVariables.quadrantPointTextFill,\n    quadrantXAxisTextFill: themeVariables.quadrantXAxisTextFill,\n    quadrantYAxisTextFill: themeVariables.quadrantYAxisTextFill,\n    quadrantExternalBorderStrokeFill: themeVariables.quadrantExternalBorderStrokeFill,\n    quadrantInternalBorderStrokeFill: themeVariables.quadrantInternalBorderStrokeFill,\n    quadrantTitleFill: themeVariables.quadrantTitleFill\n  });\n  quadrantBuilder.setData({\n    titleText: getDiagramTitle()\n  });\n  return quadrantBuilder.build();\n}\nconst clear = function () {\n  quadrantBuilder.clear();\n  clear$1();\n};\nconst db = {\n  setWidth,\n  setHeight,\n  setQuadrant1Text,\n  setQuadrant2Text,\n  setQuadrant3Text,\n  setQuadrant4Text,\n  setXAxisLeftText,\n  setXAxisRightText,\n  setYAxisTopText,\n  setYAxisBottomText,\n  addPoint,\n  getQuadrantData,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription\n};\nconst draw = (txt, id, _version, diagObj) => {\n  var _a, _b, _c;\n  function getDominantBaseLine(horizontalPos) {\n    return horizontalPos === \"top\" ? \"hanging\" : \"middle\";\n  }\n  function getTextAnchor(verticalPos) {\n    return verticalPos === \"left\" ? \"start\" : \"middle\";\n  }\n  function getTransformation(data) {\n    return \"translate(\".concat(data.x, \", \").concat(data.y, \") rotate(\").concat(data.rotation || 0, \")\");\n  }\n  const conf = getConfig();\n  log.debug(\"Rendering quadrant chart\\n\" + txt);\n  const securityLevel = conf.securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(\"[id=\\\"\".concat(id, \"\\\"]\"));\n  const group = svg.append(\"g\").attr(\"class\", \"main\");\n  const width = ((_a = conf.quadrantChart) == null ? void 0 : _a.chartWidth) || 500;\n  const height = ((_b = conf.quadrantChart) == null ? void 0 : _b.chartHeight) || 500;\n  configureSvgSize(svg, height, width, ((_c = conf.quadrantChart) == null ? void 0 : _c.useMaxWidth) || true);\n  svg.attr(\"viewBox\", \"0 0 \" + width + \" \" + height);\n  diagObj.db.setHeight(height);\n  diagObj.db.setWidth(width);\n  const quadrantData = diagObj.db.getQuadrantData();\n  const quadrantsGroup = group.append(\"g\").attr(\"class\", \"quadrants\");\n  const borderGroup = group.append(\"g\").attr(\"class\", \"border\");\n  const dataPointGroup = group.append(\"g\").attr(\"class\", \"data-points\");\n  const labelGroup = group.append(\"g\").attr(\"class\", \"labels\");\n  const titleGroup = group.append(\"g\").attr(\"class\", \"title\");\n  if (quadrantData.title) {\n    titleGroup.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", quadrantData.title.fill).attr(\"font-size\", quadrantData.title.fontSize).attr(\"dominant-baseline\", getDominantBaseLine(quadrantData.title.horizontalPos)).attr(\"text-anchor\", getTextAnchor(quadrantData.title.verticalPos)).attr(\"transform\", getTransformation(quadrantData.title)).text(quadrantData.title.text);\n  }\n  if (quadrantData.borderLines) {\n    borderGroup.selectAll(\"line\").data(quadrantData.borderLines).enter().append(\"line\").attr(\"x1\", data => data.x1).attr(\"y1\", data => data.y1).attr(\"x2\", data => data.x2).attr(\"y2\", data => data.y2).style(\"stroke\", data => data.strokeFill).style(\"stroke-width\", data => data.strokeWidth);\n  }\n  const quadrants = quadrantsGroup.selectAll(\"g.quadrant\").data(quadrantData.quadrants).enter().append(\"g\").attr(\"class\", \"quadrant\");\n  quadrants.append(\"rect\").attr(\"x\", data => data.x).attr(\"y\", data => data.y).attr(\"width\", data => data.width).attr(\"height\", data => data.height).attr(\"fill\", data => data.fill);\n  quadrants.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).attr(\"fill\", data => data.text.fill).attr(\"font-size\", data => data.text.fontSize).attr(\"dominant-baseline\", data => getDominantBaseLine(data.text.horizontalPos)).attr(\"text-anchor\", data => getTextAnchor(data.text.verticalPos)).attr(\"transform\", data => getTransformation(data.text)).text(data => data.text.text);\n  const labels = labelGroup.selectAll(\"g.label\").data(quadrantData.axisLabels).enter().append(\"g\").attr(\"class\", \"label\");\n  labels.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).text(data => data.text).attr(\"fill\", data => data.fill).attr(\"font-size\", data => data.fontSize).attr(\"dominant-baseline\", data => getDominantBaseLine(data.horizontalPos)).attr(\"text-anchor\", data => getTextAnchor(data.verticalPos)).attr(\"transform\", data => getTransformation(data));\n  const dataPoints = dataPointGroup.selectAll(\"g.data-point\").data(quadrantData.points).enter().append(\"g\").attr(\"class\", \"data-point\");\n  dataPoints.append(\"circle\").attr(\"cx\", data => data.x).attr(\"cy\", data => data.y).attr(\"r\", data => data.radius).attr(\"fill\", data => data.fill);\n  dataPoints.append(\"text\").attr(\"x\", 0).attr(\"y\", 0).text(data => data.text.text).attr(\"fill\", data => data.text.fill).attr(\"font-size\", data => data.text.fontSize).attr(\"dominant-baseline\", data => getDominantBaseLine(data.text.horizontalPos)).attr(\"text-anchor\", data => getTextAnchor(data.text.verticalPos)).attr(\"transform\", data => getTransformation(data.text));\n};\nconst renderer = {\n  draw\n};\nconst diagram = {\n  parser: parser$1,\n  db,\n  renderer,\n  styles: () => \"\"\n};\nexport { diagram };"],"sourceRoot":""}