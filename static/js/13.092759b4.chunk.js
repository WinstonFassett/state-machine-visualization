(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{261:function(e,t,n){"use strict";var i=n(322),r=n(272),a=4;var o=function(e){return Object(r.a)(e,a)},d=n(323);n(321),n(267);function l(e){var t={options:{directed:e.isDirected(),multigraph:e.isMultigraph(),compound:e.isCompound()},nodes:s(e),edges:c(e)};return i.a(e.graph())||(t.value=o(e.graph())),t}function s(e){return d.a(e.nodes(),function(t){var n=e.node(t),r=e.parent(t),a={v:t};return i.a(n)||(a.value=n),i.a(r)||(a.parent=r),a})}function c(e){return d.a(e.edges(),function(t){var n=e.edge(t),r={v:t.v,w:t.w};return i.a(t.name)||(r.name=t.name),i.a(n)||(r.value=n),r})}n.d(t,"a",function(){return l})},262:function(e,t,n){"use strict";n.d(t,"a",function(){return j});var i=n(259),r=n(261),a=n(263),o=n(250),d=n(257),l=n(260),s=n(2);let c={},g={},h={};const f=(e,t)=>(o.y.trace("In isDecendant",t," ",e," = ",g[t].includes(e)),!!g[t].includes(e)),y=(e,t,n,i)=>{o.y.warn("Copying children of ",e,"root",i,"data",t.node(e),i);const r=t.children(e)||[];e!==i&&r.push(e),o.y.warn("Copying (nodes) clusterId",e,"nodes",r),r.forEach(r=>{if(t.children(r).length>0)y(r,t,n,i);else{const a=t.node(r);o.y.info("cp ",r," to ",i," with parent ",e),n.setNode(r,a),i!==t.parent(r)&&(o.y.warn("Setting parent",r,t.parent(r)),n.setParent(r,t.parent(r))),e!==i&&r!==e?(o.y.debug("Setting parent",r,e),n.setParent(r,e)):(o.y.info("In copy ",e,"root",i,"data",t.node(e),i),o.y.debug("Not Setting parent for node=",r,"cluster!==rootId",e!==i,"node!==clusterId",r!==e));const d=t.edges(r);o.y.debug("Copying Edges",d),d.forEach(r=>{o.y.info("Edge",r);const a=t.edge(r.v,r.w,r.name);o.y.info("Edge data",a,i);try{((e,t)=>(o.y.info("Decendants of ",t," is ",g[t]),o.y.info("Edge is ",e),e.v!==t&&e.w!==t&&(g[t]?g[t].includes(e.v)||f(e.v,t)||f(e.w,t)||g[t].includes(e.w):(o.y.debug("Tilt, ",t,",not in decendants"),!1))))(r,i)?(o.y.info("Copying as ",r.v,r.w,a,r.name),n.setEdge(r.v,r.w,a,r.name),o.y.info("newGraph edges ",n.edges(),n.edge(n.edges()[0]))):o.y.info("Skipping copy of edge ",r.v,"--\x3e",r.w," rootId: ",i," clusterId:",e)}catch(d){o.y.error(d)}})}o.y.debug("Removing node",r),t.removeNode(r)})},u=(e,t)=>{const n=t.children(e);let i=[...n];for(const r of n)h[r]=e,i=[...i,...u(r,t)];return i},p=(e,t)=>{o.y.trace("Searching",e);const n=t.children(e);if(o.y.trace("Searching children of id ",e,n),n.length<1)return o.y.trace("This is a valid node",e),e;for(const i of n){const n=p(i,t);if(n)return o.y.trace("Found replacement for",e," => ",n),n}},b=e=>c[e]&&c[e].externalConnections&&c[e]?c[e].id:e,w=(e,t)=>{if(o.y.warn("extractor - ",t,r.a(e),e.children("D")),t>10)return void o.y.error("Bailing out");let n=e.nodes(),i=!1;for(const r of n){const t=e.children(r);i=i||t.length>0}if(i){o.y.debug("Nodes = ",n,t);for(const i of n)if(o.y.debug("Extracting node",i,c,c[i]&&!c[i].externalConnections,!e.parent(i),e.node(i),e.children("D")," Depth ",t),c[i])if(!c[i].externalConnections&&e.children(i)&&e.children(i).length>0){o.y.warn("Cluster without external connections, without a parent and with children",i,t);let n="TB"===e.graph().rankdir?"LR":"TB";c[i]&&c[i].clusterData&&c[i].clusterData.dir&&(n=c[i].clusterData.dir,o.y.warn("Fixing dir",c[i].clusterData.dir,n));const a=new d.a({multigraph:!0,compound:!0}).setGraph({rankdir:n,nodesep:50,ranksep:50,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});o.y.warn("Old graph before copy",r.a(e)),y(i,e,a,i),e.setNode(i,{clusterNode:!0,id:i,clusterData:c[i].clusterData,labelText:c[i].labelText,graph:a}),o.y.warn("New graph after copy node: (",i,")",r.a(a)),o.y.debug("Old graph after copy",r.a(e))}else o.y.warn("Cluster ** ",i," **not meeting the criteria !externalConnections:",!c[i].externalConnections," no parent: ",!e.parent(i)," children ",e.children(i)&&e.children(i).length>0,e.children("D"),t),o.y.debug(c);else o.y.debug("Not a cluster",i,t);n=e.nodes(),o.y.warn("New list of nodes",n);for(const i of n){const n=e.node(i);o.y.warn(" Now next level",i,n),n.clusterNode&&w(n.graph,t+1)}}else o.y.debug("Done, no node has children",e.nodes())},v=(e,t)=>{if(0===t.length)return[];let n=Object.assign(t);return t.forEach(t=>{const i=e.children(t),r=v(e,i);n=[...n,...r]}),n},x={rect:(e,t)=>{o.y.info("Creating subgraph rect for ",t.id,t);const n=e.insert("g").attr("class","cluster"+(t.class?" "+t.class:"")).attr("id",t.id),i=n.insert("rect",":first-child"),r=Object(o.z)(Object(o.p)().flowchart.htmlLabels),d=n.insert("g").attr("class","cluster-label"),c="markdown"===t.labelType?Object(l.a)(d,t.labelText,{style:t.labelStyle,useHtmlLabels:r}):d.node().appendChild(Object(a.c)(t.labelText,t.labelStyle,void 0,!0));let g=c.getBBox();if(Object(o.z)(Object(o.p)().flowchart.htmlLabels)){const e=c.children[0],t=Object(s.H)(c);g=e.getBoundingClientRect(),t.attr("width",g.width),t.attr("height",g.height)}const h=0*t.padding,f=h/2,y=t.width<=g.width+h?g.width+h:t.width;t.width<=g.width+h?t.diff=(g.width-t.width)/2-t.padding/2:t.diff=-t.padding/2,o.y.trace("Data ",t,JSON.stringify(t)),i.attr("style",t.style).attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-y/2).attr("y",t.y-t.height/2-f).attr("width",y).attr("height",t.height+h),r?d.attr("transform","translate("+(t.x-g.width/2)+", "+(t.y-t.height/2)+")"):d.attr("transform","translate("+t.x+", "+(t.y-t.height/2)+")");const u=i.node().getBBox();return t.width=u.width,t.height=u.height,t.intersect=function(e){return Object(a.i)(t,e)},n},roundedWithTitle:(e,t)=>{const n=e.insert("g").attr("class",t.classes).attr("id",t.id),i=n.insert("rect",":first-child"),r=n.insert("g").attr("class","cluster-label"),d=n.append("rect"),l=r.node().appendChild(Object(a.c)(t.labelText,t.labelStyle,void 0,!0));let c=l.getBBox();if(Object(o.z)(Object(o.p)().flowchart.htmlLabels)){const e=l.children[0],t=Object(s.H)(l);c=e.getBoundingClientRect(),t.attr("width",c.width),t.attr("height",c.height)}c=l.getBBox();const g=0*t.padding,h=g/2,f=t.width<=c.width+t.padding?c.width+t.padding:t.width;t.width<=c.width+t.padding?t.diff=(c.width+0*t.padding-t.width)/2:t.diff=-t.padding/2,i.attr("class","outer").attr("x",t.x-f/2-h).attr("y",t.y-t.height/2-h).attr("width",f+g).attr("height",t.height+g),d.attr("class","inner").attr("x",t.x-f/2-h).attr("y",t.y-t.height/2-h+c.height-1).attr("width",f+g).attr("height",t.height+g-c.height-3),r.attr("transform","translate("+(t.x-c.width/2)+", "+(t.y-t.height/2-t.padding/3+(Object(o.z)(Object(o.p)().flowchart.htmlLabels)?5:3))+")");const y=i.node().getBBox();return t.height=y.height,t.intersect=function(e){return Object(a.i)(t,e)},n},noteGroup:(e,t)=>{const n=e.insert("g").attr("class","note-cluster").attr("id",t.id),i=n.insert("rect",":first-child"),r=0*t.padding,o=r/2;i.attr("rx",t.rx).attr("ry",t.ry).attr("x",t.x-t.width/2-o).attr("y",t.y-t.height/2-o).attr("width",t.width+r).attr("height",t.height+r).attr("fill","none");const d=i.node().getBBox();return t.width=d.width,t.height=d.height,t.intersect=function(e){return Object(a.i)(t,e)},n},divider:(e,t)=>{const n=e.insert("g").attr("class",t.classes).attr("id",t.id),i=n.insert("rect",":first-child"),r=0*t.padding,o=r/2;i.attr("class","divider").attr("x",t.x-t.width/2-o).attr("y",t.y-t.height/2).attr("width",t.width+r).attr("height",t.height+r);const d=i.node().getBBox();return t.width=d.width,t.height=d.height,t.diff=-t.padding/2,t.intersect=function(e){return Object(a.i)(t,e)},n}};let m={};const O=async(e,t,n,d,l)=>{o.y.info("Graph in recursive render: XXX",r.a(t),l);const s=t.graph().rankdir;o.y.trace("Dir in recursive render - dir:",s);const g=e.insert("g").attr("class","root");t.nodes()?o.y.info("Recursive render XXX",t.nodes()):o.y.info("No nodes found for",t),t.edges().length>0&&o.y.trace("Recursive edges",t.edge(t.edges()[0]));const h=g.insert("g").attr("class","clusters"),f=g.insert("g").attr("class","edgePaths"),y=g.insert("g").attr("class","edgeLabels"),u=g.insert("g").attr("class","nodes");await Promise.all(t.nodes().map(async function(e){const i=t.node(e);if(void 0!==l){const n=JSON.parse(JSON.stringify(l.clusterData));o.y.info("Setting data for cluster XXX (",e,") ",n,l),t.setNode(l.id,n),t.parent(e)||(o.y.trace("Setting parent",e,l.id),t.setParent(e,l.id,n))}if(o.y.info("(Insert) Node XXX"+e+": "+JSON.stringify(t.node(e))),i&&i.clusterNode){o.y.info("Cluster identified",e,i.width,t.node(e));const r=await O(u,i.graph,n,d,t.node(e)),l=r.elem;Object(a.n)(i,l),i.diff=r.diff||0,o.y.info("Node bounds (abc123)",e,i,i.width,i.x,i.y),Object(a.m)(l,i),o.y.warn("Recursive render complete ",l,i)}else t.children(e).length>0?(o.y.info("Cluster - the non recursive path XXX",e,i.id,i,t),o.y.info(p(i.id,t)),c[i.id]={id:p(i.id,t),node:i}):(o.y.info("Node - the non recursive path",e,i.id,i),await Object(a.e)(u,t.node(e),s))})),t.edges().forEach(function(e){const n=t.edge(e.v,e.w,e.name);o.y.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e)),o.y.info("Edge "+e.v+" -> "+e.w+": ",e," ",JSON.stringify(t.edge(e))),o.y.info("Fix",c,"ids:",e.v,e.w,"Translateing: ",c[e.v],c[e.w]),Object(a.f)(y,n)}),t.edges().forEach(function(e){o.y.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(e))}),o.y.info("#############################################"),o.y.info("###                Layout                 ###"),o.y.info("#############################################"),o.y.info(t),Object(i.a)(t),o.y.info("Graph after layout:",r.a(t));let b=0;return(e=>v(e,e.children()))(t).forEach(function(e){const n=t.node(e);o.y.info("Position "+e+": "+JSON.stringify(t.node(e))),o.y.info("Position "+e+": ("+n.x,","+n.y,") width: ",n.width," height: ",n.height),n&&n.clusterNode?Object(a.l)(n):t.children(e).length>0?(((e,t)=>{o.y.trace("Inserting cluster");const n=t.shape||"rect";m[t.id]=x[n](e,t)})(h,n),c[n.id].node=n):Object(a.l)(n)}),t.edges().forEach(function(e){const i=t.edge(e);o.y.info("Edge "+e.v+" -> "+e.w+": "+JSON.stringify(i),i);const r=Object(a.g)(f,e,i,c,n,t,d);Object(a.h)(i,r)}),t.nodes().forEach(function(e){const n=t.node(e);o.y.info(e,n.type,n.diff),"group"===n.type&&(b=n.diff)}),{elem:g,diff:b}},j=async(e,t,n,i,d)=>{Object(a.a)(e,n,i,d),Object(a.b)(),Object(a.d)(),m={},g={},h={},c={},o.y.warn("Graph at first:",JSON.stringify(r.a(t))),((e,t)=>{!e||t>10?o.y.debug("Opting out, no graph "):(o.y.debug("Opting in, graph "),e.nodes().forEach(function(t){e.children(t).length>0&&(o.y.warn("Cluster identified",t," Replacement id in edges: ",p(t,e)),g[t]=u(t,e),c[t]={id:p(t,e),clusterData:e.node(t)})}),e.nodes().forEach(function(t){const n=e.children(t),i=e.edges();n.length>0?(o.y.debug("Cluster identified",t,g),i.forEach(e=>{e.v!==t&&e.w!==t&&f(e.v,t)^f(e.w,t)&&(o.y.warn("Edge: ",e," leaves cluster ",t),o.y.warn("Decendants of XXX ",t,": ",g[t]),c[t].externalConnections=!0)})):o.y.debug("Not a cluster ",t,g)}),e.edges().forEach(function(t){const n=e.edge(t);o.y.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(t)),o.y.warn("Edge "+t.v+" -> "+t.w+": "+JSON.stringify(e.edge(t)));let i=t.v,r=t.w;if(o.y.warn("Fix XXX",c,"ids:",t.v,t.w,"Translating: ",c[t.v]," --- ",c[t.w]),c[t.v]&&c[t.w]&&c[t.v]===c[t.w]){o.y.warn("Fixing and trixing link to self - removing XXX",t.v,t.w,t.name),o.y.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),i=b(t.v),r=b(t.w),e.removeEdge(t.v,t.w,t.name);const a=t.w+"---"+t.v;e.setNode(a,{domId:a,id:a,labelStyle:"",labelText:n.label,padding:0,shape:"labelRect",style:""});const d=structuredClone(n),l=structuredClone(n);d.label="",d.arrowTypeEnd="none",l.label="",d.fromCluster=t.v,l.toCluster=t.v,e.setEdge(i,a,d,t.name+"-cyclic-special"),e.setEdge(a,r,l,t.name+"-cyclic-special")}else(c[t.v]||c[t.w])&&(o.y.warn("Fixing and trixing - removing XXX",t.v,t.w,t.name),i=b(t.v),r=b(t.w),e.removeEdge(t.v,t.w,t.name),i!==t.v&&(n.fromCluster=t.v),r!==t.w&&(n.toCluster=t.w),o.y.warn("Fix Replacing with XXX",i,r,t.name),e.setEdge(i,r,n,t.name))}),o.y.warn("Adjusted Graph",r.a(e)),w(e,0),o.y.trace(c))})(t),o.y.warn("Graph after:",JSON.stringify(r.a(t))),await O(e,t,i,d)}},336:function(e,t,n){"use strict";n.r(t),n.d(t,"diagram",function(){return f});var i=n(296),r=n(2),a=n(257),o=n(250),d=n(262);n(60),n(61),n(59),n(26),n(259),n(261);const l=e=>o.r.sanitizeText(e,Object(o.p)());let s={dividerMargin:10,padding:5,textHeight:10,curve:void 0};const c=function(e,t,n,i,r){const a=Object.keys(e);o.y.info("keys:",a),o.y.info(e),a.filter(t=>e[t].parent==r).forEach(function(n){var a,d,s,c;const g=e[n],h=g.cssClasses.join(" "),f="",y="",u=null!==(a=g.label)&&void 0!==a?a:g.id,p={labelStyle:f,shape:"class_box",labelText:l(u),classData:g,rx:0,ry:0,class:h,style:y,id:g.id,domId:g.domId,tooltip:i.db.getTooltip(g.id,r)||"",haveCallback:g.haveCallback,link:g.link,width:"group"===g.type?500:void 0,type:g.type,padding:null!==(d=null==(s=Object(o.p)().flowchart)?void 0:s.padding)&&void 0!==d?d:null==(c=Object(o.p)().class)?void 0:c.padding};t.setNode(g.id,p),r&&t.setParent(g.id,r),o.y.info("setNode",p)})};function g(e){let t;switch(e){case 0:t="aggregation";break;case 1:t="extension";break;case 2:t="composition";break;case 3:t="dependency";break;case 4:t="lollipop";break;default:t="none"}return t}const h={setConf:function(e){s={...s,...e}},draw:async function(e,t,n,i){var h,f,y,u;o.y.info("Drawing class - ",t);const p=null!==(h=Object(o.p)().flowchart)&&void 0!==h?h:Object(o.p)().class,b=Object(o.p)().securityLevel;o.y.info("config:",p);const w=null!==(f=null==p?void 0:p.nodeSpacing)&&void 0!==f?f:50,v=null!==(y=null==p?void 0:p.rankSpacing)&&void 0!==y?y:50,x=new a.a({multigraph:!0,compound:!0}).setGraph({rankdir:i.db.getDirection(),nodesep:w,ranksep:v,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}}),m=i.db.getNamespaces(),O=i.db.getClasses(),j=i.db.getRelations(),N=i.db.getNotes();let E;o.y.info(j),function(e,t,n,i){const r=Object.keys(e);o.y.info("keys:",r),o.y.info(e),r.forEach(function(r){var a,d,s;const g=e[r],h={shape:"rect",id:g.id,domId:g.domId,labelText:l(g.id),labelStyle:"",style:"fill: none; stroke: black",padding:null!==(a=null==(d=Object(o.p)().flowchart)?void 0:d.padding)&&void 0!==a?a:null==(s=Object(o.p)().class)?void 0:s.padding};t.setNode(g.id,h),c(g.classes,t,n,i,g.id),o.y.info("setNode",h)})}(m,x,t,i),c(O,x,t,i),function(e,t){const n=Object(o.p)().flowchart;let i=0;e.forEach(function(e){var a;i++;const d={classes:"relation",pattern:1==e.relation.lineType?"dashed":"solid",id:"id"+i,arrowhead:"arrow_open"===e.type?"none":"normal",startLabelRight:"none"===e.relationTitle1?"":e.relationTitle1,endLabelLeft:"none"===e.relationTitle2?"":e.relationTitle2,arrowTypeStart:g(e.relation.type1),arrowTypeEnd:g(e.relation.type2),style:"fill:none",labelStyle:"",curve:Object(o.A)(null==n?void 0:n.curve,r.p)};if(o.y.info(d,e),void 0!==e.style){const t=Object(o.x)(e.style);d.style=t.style,d.labelStyle=t.labelStyle}var l;e.text=e.title,void 0===e.text?void 0!==e.style&&(d.arrowheadStyle="fill: #333"):(d.arrowheadStyle="fill: #333",d.labelpos="c",(null!==(l=null==(a=Object(o.p)().flowchart)?void 0:a.htmlLabels)&&void 0!==l?l:Object(o.p)().htmlLabels)?(d.labelType="html",d.label='<span class="edgeLabel">'+e.text+"</span>"):(d.labelType="text",d.label=e.text.replace(o.r.lineBreakRegex,"\n"),void 0===e.style&&(d.style=d.style||"stroke: #333; stroke-width: 1.5px;fill:none"),d.labelStyle=d.labelStyle.replace("color:","fill:"))),t.setEdge(e.id1,e.id2,d,i)})}(j,x),function(e,t,n,i){o.y.info(e),e.forEach(function(e,a){var d,c,g;const h=e,f="",y="",u=h.text,p={labelStyle:f,shape:"note",labelText:l(u),noteData:h,rx:0,ry:0,class:"",style:y,id:h.id,domId:h.id,tooltip:"",type:"note",padding:null!==(d=null==(c=Object(o.p)().flowchart)?void 0:c.padding)&&void 0!==d?d:null==(g=Object(o.p)().class)?void 0:g.padding};if(t.setNode(h.id,p),o.y.info("setNode",p),!h.class||!(h.class in i))return;const b=n+a,w={id:"edgeNote".concat(b),classes:"relation",pattern:"dotted",arrowhead:"none",startLabelRight:"",endLabelLeft:"",arrowTypeStart:"none",arrowTypeEnd:"none",style:"fill:none",labelStyle:"",curve:Object(o.A)(s.curve,r.p)};t.setEdge(h.id,h.class,w,b)})}(N,x,j.length+1,O),"sandbox"===b&&(E=Object(r.H)("#i"+t));const S="sandbox"===b?Object(r.H)(E.nodes()[0].contentDocument.body):Object(r.H)("body"),T=S.select('[id="'.concat(t,'"]')),C=S.select("#"+t+" g");if(await Object(d.a)(C,x,["aggregation","extension","composition","dependency","lollipop"],"classDiagram",t),o.H.insertTitle(T,"classTitleText",null!==(u=null==p?void 0:p.titleTopMargin)&&void 0!==u?u:5,i.db.getDiagramTitle()),Object(o.B)(x,T,null==p?void 0:p.diagramPadding,null==p?void 0:p.useMaxWidth),!(null==p?void 0:p.htmlLabels)){const e="sandbox"===b?E.nodes()[0].contentDocument:document,n=e.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const t of n){const n=t.getBBox(),i=e.createElementNS("http://www.w3.org/2000/svg","rect");i.setAttribute("rx",0),i.setAttribute("ry",0),i.setAttribute("width",n.width),i.setAttribute("height",n.height),t.insertBefore(i,t.firstChild)}}}},f={parser:i.b,db:i.a,renderer:h,styles:i.c,init:e=>{e.class||(e.class={}),e.class.arrowMarkerAbsolute=e.arrowMarkerAbsolute,i.a.clear()}}}}]);
//# sourceMappingURL=13.092759b4.chunk.js.map